{"version":3,"sources":["components/modals/product_variant/add_product_variant.js","components/modals/product_variant/edit_product_variant.js","components/modals/variant_csv_upload.js","pages/products/add_products.js","components/modals/add_category.js","components/404.js","components/modals/add_product-type.js","components/header.js","components/sidebar.js","components/modals/product_csv_upload.js","pages/products/products_list.js","pages/products/product_edit.js","pages/categories/edit_categories_modal.js","pages/categories/create_categories_csv_modal.js","pages/categories/list_categories.js","pages/product_type/edit_product_type_modal.js","pages/product_type/create_product_type_csv_modal.js","pages/product_type/add_product_type_modal.js","pages/product_type/list_product_type.js","pages/users/user_invite_modal.js","pages/users/user_list.js","pages/registrations/user_invite_modal.js","pages/registrations/registration_list.js","authenticated-app.js"],"names":["AddProductVariant","props","$","window","useState","loading","setLoading","name","description","price","code","quantityInCase","inventory","uom","upc","productVariantImage","errors","formValues","setFormValues","useEffect","modal","dropify","messages","handleSubmit","e","a","preventDefault","validateForm","Object","values","setTimeout","toggleModal","productVariants","handleChange","event","target","value","files","prevState","handlePress","which","val","length","id","className","tabIndex","role","aria-labelledby","aria-hidden","data-backdrop","data-keyboard","type","onClick","data-dismiss","aria-label","noValidate","onChange","placeholder","required","onKeyPress","htmlFor","style","paddingLeft","multiple","data-height","data-allowed-file-extensions","data-max-file-size","rows","margin","display","width","opacity","EditProductVariant","productVariant","_id","updateVariant","defaultValue","data-default-file","process","VariantCsvUpload","file","formData","FormData","append","uploadVariantCsv","status","toastr","success","console","log","downloadSampleCsv","data","productId","options","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","title","useTextFile","useBom","filename","useKeysAsHeaders","ExportToCsv","generateCsv","href","AddProduct","submit","categories","setCategories","productType","setProductType","productTypeId","categoryId","category","productImage","showModal","setShowModal","variantToEdit","setVariantToEdit","showEditModal","setEditModal","showVariantUploadModal","setShowVariantUploadModal","productTypeOptions","map","pt","label","categoryOptions","cat","error","variantImages","forEach","pVariants","push","formFiles","JSON","stringify","x","createProduct","editVariant","index","variant","objIndex","findIndex","obj","to","height","marginRight","data-toggle","aria-haspopup","aria-expanded","padding","onMenuOpen","getProductType","option","getCategory","float","key","scope","color","cursor","data-placement","data-original-title","Swal","fire","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","splice","deleteVariant","variants","AddGroupModal","user","useAuth","closeModal","church_group","createCategory","data-size","XXL","data-style","SLIDE_UP","data-spinner-size","data-spinner-color","data-spinner-lines","NotFoud","AddProductType","createProductType","Header","logout","showProductType","setShowProductType","displayModal","src","alt","SideBar","data-simplebar","ProductCsvUpload","uploadProductCsv","ProductList","jQuery","products","setProducts","page","setPage","productToEdit","setProductToEdit","setProductId","ids","setIds","getProducts","document","getElementById","DataTable","addClass","newPage","newProducts","scrollHandler","threshold","scrollTop","offset","top","on","deleteProduct","product","removeProduct","deleteMultipleProduct","state","x-placement","position","willChange","left","transform","aria-controls","rowSpan","colSpan","aria-sort","oldArray","ProductEdit","match","params","getProductById","location","replace","preVState","setSubmit","updateImage","pv","updateProduct","removeVariant","EditCategories","updateCategory","CategoryCsvUpload","uploadCategoryCsv","CategoryList","setcategories","categoryToEdit","setcategoryToEdit","showCsvModal","setshowCsvModal","addCatModal","setAddCatModal","newData","editCategory","EditProductType","updateProductType","ProductTypeCsvUpload","uploadProductTypeCsv","AddProductTypeModal","ProductTypeList","productTypeToEdit","setProductTypeToEdit","InviteUser","email","validator","isEmail","UserList","users","setUsers","getAllUsers","fullName","userType","roles","RegistrationList","getRegistrations","phone_number","age","ErrorFallback","css","flexDirection","justifyContent","alignItems","AuthenticatedApp","FallbackComponent","render","path","exact","Date","getFullYear"],"mappings":"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","file":"static/js/5.f7f97a47.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n/**\n * @return {string}\n */\nfunction AddProductVariant(props) {\n  const $ = window.$;\n\n  const [loading, setLoading] = useState(false);\n\n  const [formValues, setFormValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    code: \"\",\n    quantityInCase: \"\",\n    inventory: \"\",\n    uom: \"\",\n    upc: \"\",\n    productVariantImage: \"\",\n    errors: {}\n  });\n\n  useEffect(() => {\n    window.$(\"#addVariant\").modal(\"show\");\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  }, []);\n\n  const closeModal = () => {\n    props.toggleModal(false);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    let errors = formValues.errors;\n    validateForm(errors);\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setTimeout(()=> setLoading(false), 2000)\n        return\n      }\n    }\n    delete formValues.errors\n    $(\"#addVariant\").modal('toggle');\n    props.toggleModal(false);\n    props.productVariants([formValues]);\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handlePress = event => {\n    if (event.which !== 46 && (event.which < 48 || event.which > 57)) {\n      event.preventDefault();\n    }\n    let { name, value } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value\n      };\n    });\n  };\n\n  const validateForm = errors => {\n    const { name, price, code, productVariantImage, description } = formValues;\n\n    for (let val in formValues) {\n      if (val === \"name\") {\n        if (name.length <= 3) {\n          errors.name = \"variant name must be more than 3 characters long!\";\n        }\n      }\n\n      if (val === \"description\") {\n        if (description.length <= 3) {\n          errors.description = \"description must be more than 3 characters long!\";\n        }\n      }\n\n      if (val === \"price\") {\n        if (!price.length) {\n          errors.price = \"price cannot be empty\";\n        }\n      }\n\n      if (val === \"code\") {\n        if (!code.length) {\n          errors.code = \"code cannot be empty\";\n        }\n      }\n\n      if (val === \"productVariantImage\") {\n        if (!productVariantImage) {\n          errors.productVariantImage = \"kindly upload an Image\";\n        }\n      }\n\n    }\n\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n  };\n\n  const { errors } = formValues;\n\n  return props.toggleModal ? (\n    <div\n      id=\"addVariant\"\n      className=\"modal fade\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"addGroupLabel\"\n      aria-hidden=\"true\"\n      data-backdrop=\"static\"\n      data-keyboard=\"false\"\n    >\n      <div className=\"modal-dialog modal-lg\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"addGroupLabel\">\n              ADD PRODUCT VARIANT\n            </h5>\n            <button\n              type=\"button\"\n              onClick={() => closeModal()}\n              className=\"close waves-effect waves-light\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n\n          <div className=\"modal-body\">\n            <form className=\"needs-validation\" noValidate>\n              <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"name\"\n                    className=\"form-control form_name\"\n                    placeholder=\"Name\"\n                    required\n                  />\n                  {errors.name && errors.name.length > 0 && (\n                    <span className=\"addGroup__error\">{errors.name}</span>\n                  )}\n                </div>\n\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    type=\"text\"\n                    onKeyPress={handlePress}\n                    name=\"price\"\n                    className=\"form-control form_name\"\n                    placeholder=\"Price\"\n                    required\n                  />\n                  {errors.price && errors.price.length > 0 && (\n                    <span className=\"addGroup__error\">{errors.price}</span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"code\"\n                    className=\"form-control form_name\"\n                    placeholder=\"Code\"\n                    required\n                  />\n                  {errors.code && errors.code.length > 0 && (\n                    <span className=\"addGroup__error\">{errors.code}</span>\n                  )}\n                </div>\n\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    type=\"text\"\n                    onKeyPress={handlePress}\n                    name=\"inventory\"\n                    className=\"form-control form_name\"\n                    id=\"validationCustom01\"\n                    placeholder=\"Inventory\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"colFormLabel\" style={{paddingLeft: \"0px\"}}>Product Variant Image</label>\n                  <input type=\"file\" name=\"productVariantImage\" multiple onChange={handleChange} className=\"dropify\" data-height=\"150\" data-allowed-file-extensions=\"jpg png jpeg\" data-max-file-size=\"500K\"/>\n                  {errors.productVariantImage && errors.productVariantImage.length > 0 && (\n                    <span className=\"addGroup__error\">{errors.productVariantImage}</span>\n                  )}\n                </div>\n\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"colFormLabel\"  style={{paddingLeft: \"0px\"}}>Description</label>\n                  <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" onChange={handleChange} name=\"description\" rows=\"7\"></textarea>\n                  {errors.description && errors.description.length > 0 && (\n                    <span className=\"addGroup__error\">{errors.description}</span>\n                  )}\n                </div>\n              </div>\n\n              <br />\n              <hr />\n              <h5>Sub Unit</h5>\n              <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    type=\"text\"\n                    onKeyPress={handlePress}\n                    name=\"inventory\"\n                    className=\"form-control form_name\"\n                    placeholder=\"Quantity In Case\"\n                    required\n                  />\n                </div>\n\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"code\"\n                    className=\"form-control form_name\"\n                    placeholder=\"UOM\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"upc\"\n                    className=\"form-control form_name\"\n                    placeholder=\"UPC\"\n                    required\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div className=\"modal-footer\">\n            {!loading ?\n              <button\n                type=\"button\"\n                onClick={handleSubmit}\n                className=\"btn btn-primary btn-large waves-effect waves-light\"\n                style={{ margin: \"auto\", display: \"block\", width: \"200px\" }}\n              >\n                Add Variant\n              </button> :\n              <button type=\"button\"\n                      className=\"btn btn-primary btn-large waves-effect waves-light\"\n                      style={{margin: \"auto\", display: \"block\", width: \"200px\", opacity: \"0.4\"}}>\n                Adding Variant .....\n              </button>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport { AddProductVariant };\n","import React, { useEffect, useState } from \"react\";\nimport {updateImage} from \"../../../utils/auth-client\";\n/**\n * @return {string}\n */\nfunction EditProductVariant(props) {\n  const {productVariant} = props\n  const baseUrl = process.env.REACT_APP_BACKEND_URL\n  const $ = window.$\n  const [loading, setLoading] = useState(false);\n\n  const [formValues, setFormValues] = useState({\n    name: productVariant.name,\n    description: productVariant.description,\n    price: productVariant.price,\n    code: productVariant.code,\n    quantityInCase: productVariant.quantityInCase,\n    inventory: productVariant.inventory,\n    uom: productVariant.uom,\n    upc: productVariant.upc,\n    productVariantImage: productVariant.productVariantImage,\n    _id: productVariant._id,\n    errors: {}\n  });\n\n  useEffect(() => {\n    window.$(\"#editProductVariant\").modal(\"show\");\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  }, []);\n\n  const closeModal = () => {\n    props.toggleModal(false);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    let errors = formValues.errors;\n    validateForm(errors);\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setTimeout(()=> setLoading(false), 2000)\n        return\n      }\n    }\n    delete formValues.errors\n    props.toggleModal(false);\n    $('#editProductVariant').modal('toggle');\n    props.updateVariant(productVariant.id, formValues);\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handlePress = event => {\n    if (event.which !== 46 && (event.which < 48 || event.which > 57)) {\n      event.preventDefault();\n    }\n    let { name, value } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value\n      };\n    });\n  };\n\n  const validateForm = errors => {\n    const { name, price, code,productVariantImage, description } = formValues;\n\n    for (let val in formValues) {\n      if (val === \"name\") {\n        if (name.length <= 3) {\n          errors.name = \"variant name must be more than 3 characters long!\";\n        }\n      }\n\n      if (val === \"description\") {\n        if (description.length <= 3) {\n          errors.description = \"description must be more than 3 characters long!\";\n        }\n      }\n\n      if (val === \"price\") {\n        if (!price.length) {\n          errors.price = \"price cannot be empty\";\n        }\n      }\n\n      if (val === \"code\") {\n        if (!code.length) {\n          errors.code = \"code cannot be empty\";\n        }\n      }\n\n      if (val === \"productVariantImage\") {\n        if (!productVariantImage) {\n          errors.productVariantImage = \"kindly upload an Image\";\n        }\n      }\n\n    }\n\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n  };\n\n  const { errors, name, price, code, inventory, quantityInCase, uom,upc, description} = formValues;\n\n  return props.toggleModal ? (\n    <div\n      id=\"editProductVariant\"\n      className=\"modal fade\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"addGroupLabel\"\n      aria-hidden=\"true\"\n      data-backdrop=\"static\"\n      data-keyboard=\"false\"\n    >\n      <div className=\"modal-dialog modal-lg\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"addGroupLabel\">\n              Edit {productVariant.name}\n            </h5>\n            <button\n              type=\"button\"\n              onClick={() => closeModal()}\n              className=\"close waves-effect waves-light\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n\n          <div className=\"modal-body\">\n            <form className=\"needs-validation\" noValidate>\n              <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    value={name}\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"name\"\n                    className=\"form-control form_name\"\n                    placeholder=\"Name\"\n                    required\n                  />\n                  {errors.name && errors.name.length > 0 && (\n                    <span className=\"addGroup__error\">{errors.name}</span>\n                  )}\n                </div>\n\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    defaultValue={price}\n                    type=\"text\"\n                    onKeyPress={handlePress}\n                    name=\"price\"\n                    className=\"form-control form_name\"\n                    placeholder=\"Price\"\n                    required\n                  />\n                  {errors.price && errors.price.length > 0 && (\n                    <span className=\"addGroup__error\">{errors.price}</span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    value={code}\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"code\"\n                    className=\"form-control form_name\"\n                    placeholder=\"Code\"\n                    required\n                  />\n                  {errors.code && errors.code.length > 0 && (\n                    <span className=\"addGroup__error\">{errors.code}</span>\n                  )}\n                </div>\n\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    defaultValue={inventory}\n                    type=\"text\"\n                    onKeyPress={handlePress}\n                    name=\"inventory\"\n                    className=\"form-control form_name\"\n                    id=\"validationCustom01\"\n                    placeholder=\"Inventory\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"colFormLabel\" style={{paddingLeft: \"0px\"}}>Product Variant Image</label>\n                  <input type=\"file\" name=\"productVariantImage\" data-default-file={`${baseUrl}/${formValues.productVariantImage}`} onChange={handleChange} className=\"dropify\" data-height=\"150\" data-allowed-file-extensions=\"jpg png jpeg\" data-max-file-size=\"500K\"/>\n                  {errors.productVariantImage && errors.productVariantImage.length > 0 && (\n                    <span className=\"addGroup__error\">{errors.productVariantImage}</span>\n                  )}\n                </div>\n\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"colFormLabel\"  style={{paddingLeft: \"0px\"}}>Description</label>\n                  <textarea value={description} className=\"form-control\" id=\"exampleFormControlTextarea1\" onChange={handleChange} name=\"description\" rows=\"7\"></textarea>\n                  {errors.description && errors.description.length > 0 && (\n                    <span className=\"addGroup__error\">{errors.description}</span>\n                  )}\n                </div>\n              </div>\n\n              <br />\n              <hr />\n              <h5>Sub Unit</h5>\n              <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    value={quantityInCase}\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"quantityInCase\"\n                    className=\"form-control form_name\"\n                    placeholder=\"Quantity In Case\"\n                    required\n                  />\n                </div>\n\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    value={uom}\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"uom\"\n                    className=\"form-control form_name\"\n                    placeholder=\"UOM\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3\">\n                  <input\n                    value={upc}\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"upc\"\n                    className=\"form-control form_name\"\n                    placeholder=\"UPC\"\n                    required\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div className=\"modal-footer\">\n            {!loading ?\n              <button\n                type=\"button\"\n                onClick={handleSubmit}\n                className=\"btn btn-primary btn-large waves-effect waves-light\"\n                style={{ margin: \"auto\", display: \"block\", width: \"200px\" }}\n              >\n                Update Product Variant\n              </button> :\n              <button type=\"button\"\n                      className=\"btn btn-primary btn-large waves-effect waves-light\"\n                      style={{margin: \"auto\", display: \"block\", width: \"200px\", opacity: \"0.4\"}}>\n                Updating Product Variant .....\n              </button>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport { EditProductVariant };\n","import React, {useEffect, useState} from 'react'\nimport {uploadVariantCsv} from '../../utils/auth-client'\nimport { ExportToCsv } from \"export-to-csv\";\nimport toastr from \"toastr\";\n/**\n * @return {string}\n */\nfunction VariantCsvUpload(props) {\n  const $ = window.$;\n  const [loading, setLoading] = useState(false);\n  const [formValues, setFormValues] = useState({\n    file: '',\n    errors: {}\n  });\n\n  useEffect(()=> {\n    window.$('#addGroup').modal('show');\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { file } = formValues;\n    setLoading(true);\n    let errors = formValues.errors;\n    for (let val in formValues) {\n      if (val === \"file\") {\n        if (!file.length) {\n          errors.file = \"kindly upload a csv file\";\n        }\n      }\n    }\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setLoading(false)\n      }\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n    delete formValues.errors\n    let formData = new FormData();\n    formData.append('file', file[0])\n    let data = await uploadVariantCsv(formData);\n    if (data.status === 'success') {\n      toastr.success(\"variants uploaded\")\n      $(\"#addGroup\").modal('toggle');\n      props.toggleModal(false);\n    }\n    console.log(\"data \")\n  };\n\n  const downloadSampleCsv = async () => {\n    let data = [{\n      productId: \"WrSLV84lEQamss0vgd\",\n      name: \"milo\",\n      description: \"a nourishing beverage for you and your family\",\n      price: 200,\n      code: \"MIL123\",\n      quantityInCase: 40,\n      inventory: 500,\n      uom:\"\",\n      upc:\"\",\n    }];\n    const options = {\n      fieldSeparator: \",\",\n      quoteStrings: '\"',\n      decimalSeparator: \".\",\n      showLabels: true,\n      showTitle: false,\n      title: \"Variant Sample\",\n      useTextFile: false,\n      useBom: true,\n      filename: \"Variant CSV\",\n      useKeysAsHeaders: true\n    };\n    const csvExporter = new ExportToCsv(options);\n    csvExporter.generateCsv(data);\n  }\n\n  const {errors} = formValues;\n\n  return (\n    props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >Upload Variants By CSV</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n\n                  <p>Kindly click <a href=\"#\" onClick={downloadSampleCsv}>here</a> for a sample upload</p>\n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">CSV file</label>\n                    <input type=\"file\" name=\"file\" onChange={handleChange} className=\"dropify\" data-height=\"90\" data-allowed-file-extensions=\"csv\" data-max-file-size=\"500K\"/>\n                    {errors.file && errors.file.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.file}</span>\n                    )}\n                  </div>\n\n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n\n              {!loading ?\n                <button\n                  type=\"button\"\n                  onClick={handleSubmit}\n                  className=\"btn btn-primary btn-large waves-effect waves-light\"\n                  style={{ margin: \"auto\", display: \"block\", width: \"200px\" }}\n                >\n                  Upload Csv\n                </button> :\n                <button type=\"button\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light\"\n                        style={{margin: \"auto\", display: \"block\", width: \"200px\", opacity: \"0.4\"}}>\n                  Uploading  Csv .....\n                </button>\n              }\n\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {VariantCsvUpload}\n\n","import React, {useEffect,useState} from 'react'\nimport Select from \"react-select\";\nimport Swal from 'sweetalert2'\nimport {Link, Redirect} from \"react-router-dom\";\nimport {getCategory, createProduct, getProductType} from \"../../utils/auth-client\";\nimport toastr from \"toastr\";\nimport {AddProductVariant} from \"../../components/modals/product_variant/add_product_variant\";\nimport {EditProductVariant} from \"../../components/modals/product_variant/edit_product_variant\";\nimport {VariantCsvUpload} from \"../../components/modals/variant_csv_upload\";\n\nfunction AddProduct() {\n  const $ = window.$;\n\n  useEffect(()=> {\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  },[])\n\n  const [submit, setSubmit] = useState(false)\n\n  const [categories, setCategories] = useState([]);\n\n  const [productType, setProductType] = useState([]);\n\n  const [loading, setLoading] = useState(false);\n\n  const [formValues, setFormValues] = useState({\n    name: \"\",\n    description: \"\",\n    productTypeId: [],\n    productType: \"\",\n    categoryId: [],\n    category: \"\",\n    productVariants: [],\n    productImage:\"\",\n    errors: {}\n  });\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [variantToEdit, setVariantToEdit] = useState([])\n\n  const [showEditModal, setEditModal] = useState(false);\n\n  const [showVariantUploadModal, setShowVariantUploadModal] = useState(false);\n\n  const productTypeOptions = productType.map((pt)=> {\n    return {value: pt.name, label: pt.name, id: pt._id}\n  });\n\n  const categoryOptions = categories.map((cat)=> {\n    return { value: cat.name, label: cat.name, id: cat._id }\n  });\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    let errors = formValues.errors;\n    validateForm(errors);\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setLoading(false)\n        return\n      }\n    }\n    delete formValues.errors\n    const {productVariants} = formValues\n    if (!productVariants.length) {\n      toastr.error(\"Kindly add product variants\")\n      setLoading(false)\n      return\n    }\n    let variantImages = []\n    productVariants.forEach((pVariants) => {\n      variantImages.push(pVariants.productVariantImage[0])\n    })\n    let formFiles = [formValues.productImage[0], ...variantImages]\n    let formData = new FormData();\n    formData.append('name',formValues.name);\n    formData.append('description',formValues.description);\n    formData.append('productTypeId',formValues.productTypeId);\n    formData.append('productType',formValues.productType);\n    formData.append('categoryId',formValues.categoryId);\n    formData.append('category',formValues.category);\n    formData.append('productVariants', JSON.stringify(formValues.productVariants));\n    formData.append('fileCount',formValues.productImage.length);\n    for(var x = 0; x < formFiles.length; x++) {\n      formData.append('file', formFiles[x])\n    }\n    let data = await createProduct(formData);\n    setLoading(false)\n    if (data && data.status === \"Success\") {\n      toastr.success(\"Product Created Successfully\");\n      setLoading(false)\n      //setSubmit(true)\n    } else {\n      toastr.error(\"Product Created Failed\");\n    }\n  }\n\n  const validateForm = errors => {\n    const { name, description, productTypeId, categoryId, productImage, productVariants } = formValues;\n    for (let val in formValues) {\n      if (val === \"name\") {\n        if (name.length <= 3) {\n          errors.name = \"variant name must be more than 3 characters long!\";\n        }\n      }\n\n      if (val === \"description\") {\n        if (description.length <= 3) {\n          errors.description = \"description of product must be more than 3 characters long!\";\n        }\n      }\n\n      if (val === \"productTypeId\") {\n        if (!productTypeId.length) {\n          errors.productTypeId = \"product type can't be empty\";\n        }\n      }\n\n      if (val === \"categoryId\") {\n        if (!categoryId.length) {\n          errors.categoryId = \"category can't be empty\";\n        }\n      }\n\n      if (val === \"productImage\") {\n        if (!productImage) {\n          errors.productImage = \"kindly upload an Image\";\n        }\n      }\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n  };\n\n  const displayModal = (value) => {\n    setShowModal(value)\n  };\n\n  const displayEditModal = (value) => {\n    setEditModal(value)\n  };\n\n  const displayVariantModal = (value) => {\n    setShowVariantUploadModal(value)\n  };\n\n  const variants = (variants) => {\n    variants = variants || []\n    let { productVariants } = formValues\n    if (productVariants.length) {\n      variants = variants.map((val)=> {\n        return {...val, id: productVariants.length - 1}\n      })\n      productVariants = [...productVariants, ...variants]\n    } else {\n      productVariants = variants\n    }\n    setFormValues((prevState)=> {\n      return {\n        ...prevState,\n        productVariants: productVariants\n      }\n    })\n  }\n\n  const deleteVariant = (index) => {\n    const {productVariants} = formValues\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'You will not be able to recover this product variant!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        for(let variant of productVariants) {\n          productVariants.splice(index, 1);\n        }\n        setFormValues((prevState)=> {\n          return {\n            ...prevState,\n            productVariants\n          }\n        })\n      }\n    })\n  }\n\n  const editVariant = (index, variant) => {\n    const {productVariants} = formValues\n    if (variant) {\n      const objIndex = productVariants.findIndex((obj => obj.id === index));\n      productVariants[objIndex].name = variant.name\n      productVariants[objIndex].price = variant.price\n      productVariants[objIndex].code = variant.code\n      productVariants[objIndex].quantityInCase = variant.quantityInCase\n      productVariants[objIndex].inventory = variant.inventory\n      productVariants[objIndex].uom = variant.uom\n      productVariants[objIndex].upc = variant.upc\n      productVariants[objIndex].description = variant.description\n      setFormValues((prevState) => {\n        return {\n          ...prevState,\n          productVariants: productVariants\n        }\n      })\n    } else {\n      setEditModal(true)\n      setVariantToEdit(productVariants[index])\n    }\n  }\n\n  const { errors, productVariants} = formValues;\n\n  return (\n    !submit ?\n    <div className=\"main-content\">\n\n      <div className=\"page-content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"page-title-box d-flex align-items-center justify-content-between sticky\">\n                <h4 className=\"mb-0 font-size-18\">Add a Prouct</h4>\n\n                <div className=\"page-title-right\">\n                  <div className=\"btn-group\" role=\"group\">\n                    {!loading ?\n                      <button\n                        type=\"button\"\n                        onClick={handleSubmit}\n                        className=\"btn btn-primary btn-large waves-effect waves-light\"\n                        style={{ margin: \"auto\", display: \"block\", width: \"200px\", height: \"37px\", marginRight: \"10px\"}}\n                      >\n                        Add Product\n                      </button> :\n                      <button type=\"button\"\n                              className=\"btn btn-primary btn-large waves-effect waves-light\"\n                              style={{margin: \"auto\", display: \"block\", width: \"200px\", height: \"37px\", opacity: \"0.4\", marginRight: \"10px\"}}>\n                        Add Product .....\n                      </button>\n                    }\n\n                    <div className=\"dropdown d-inline-block ml-2\">\n                      <button type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle\" id=\"page-header-user-dropdown\"\n                              data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <span className=\"d-none d-sm-inline-block ml-1\">Action</span>\n                        <i className=\"mdi mdi-chevron-down d-none d-sm-inline-block\"></i>\n                      </button>\n                      <div className=\"dropdown-menu dropdown-menu-right\">\n                        <Link to=\"/products/list\" className=\"dropdown-item\">\n                          Product List\n                        </Link>\n                        <a href=\"#\" onClick={() => { setShowVariantUploadModal(true) }} className=\"dropdown-item\">\n                          Upload Product Var Csv\n                        </a>\n                        {/*<a href=\"#\" onClick={() => { setShowVariantUploadModal(true) }} className=\"dropdown-item\">\n                          Upload Product Var Csv\n                        </a>*/}\n\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-body\" style={{padding: \"4.25rem\"}}>\n                  <form className=\"needs-validation\" noValidate>\n                    <div className=\"form-row\">\n                      <div className=\"col-md-12 mb-3\">\n                        <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\" style={{paddingLeft: \"0px\"}}>Product Name</label>\n                        <input type=\"text\" onChange={handleChange} name=\"name\" className=\"form-control\" id=\"colFormLabel\"/>\n                        {errors.name && errors.name.length > 0 && (\n                          <span className=\"addGroup__error\">{errors.name}</span>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"form-row\">\n                      <div className=\"col-md-12 mb-3\">\n                        <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\" style={{paddingLeft: \"0px\"}}>Product Description</label>\n                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" onChange={handleChange} name=\"description\" rows=\"3\"></textarea>\n                        {errors.description && errors.description.length > 0 && (\n                          <span className=\"addGroup__error\">{errors.description}</span>\n                        )}\n                      </div>\n\n                    </div>\n\n                    <div className=\"form-row\">\n                      <div className=\"col-md-12 mb-3\">\n                        <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\" style={{paddingLeft: \"0px\"}}>Product Image</label>\n                        <input type=\"file\" multiple name=\"productImage\" onChange={handleChange} className=\"dropify\" data-height=\"150\" data-allowed-file-extensions=\"jpg png jpeg\" data-max-file-size=\"500K\"/>\n                        {errors.productImage && errors.productImage.length > 0 && (\n                          <span className=\"addGroup__error\">{errors.productImage}</span>\n                        )}\n                      </div>\n\n                    </div>\n\n                    <div className=\"form-row\">\n                      <div className=\"col-md-6 mb-3\">\n                        <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\" style={{paddingLeft: \"0px\"}}>Product Type</label>\n                        <Select\n                          value={{ label: formValues.productType || \"Product Type\" }}\n                          onMenuOpen={ async ()=>{\n                            let data = await getProductType();\n                            setProductType(data.data);\n                          }}\n                          onChange={ async (option)=> {\n                            setFormValues(prevState => {\n                              prevState.errors.productTypeId = \"\"\n                              return {\n                                ...prevState,\n                                productTypeId: option.id,\n                                productType: option.value\n                              }\n                            })\n                          }}\n                          options={productTypeOptions}\n                          name=\"productTypeId\"\n                        />\n                        {errors.productTypeId && errors.productTypeId.length > 0 && (\n                          <span className=\"addGroup__error\">{errors.productTypeId}</span>\n                        )}\n                      </div>\n\n                      <div className=\"col-md-6 mb-3\">\n                        <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\" style={{paddingLeft: \"0px\"}}>Category</label>\n                        <Select\n                          value={{ label: formValues.category || \"Category\" }}\n                          onMenuOpen={ async ()=>{\n                            let data = await getCategory();\n                            setCategories(data.data);\n                          }}\n                          onChange={ async (option)=> {\n                            setFormValues(prevState => {\n                              prevState.errors.categoryId = \"\"\n                              return {\n                                ...prevState,\n                                categoryId: option.id,\n                                category: option.value,\n                              }\n                            })\n                          }}\n                          options={categoryOptions}\n                          name=\"categoryId\"\n                        />\n                        {errors.categoryId && errors.categoryId.length > 0 && (\n                          <span className=\"addGroup__error\">{errors.categoryId}</span>\n                        )}\n                      </div>\n\n\n                    </div>\n\n                    <br/>\n                    <button type=\"button\" onClick={e => { setShowModal(true) }}  className=\"btn btn-success waves-effect waves-light\" style={{float: \"right\"}}> <i className='bx bx-plus'></i> Add Variant </button>\n                    {errors.productVariants && errors.productVariants.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.productVariants}</span>\n                    )}\n                    <br/>\n                    <br/>\n                    <br/>\n\n                    {\n                      productVariants.length ?\n                      <div className=\"col-xl-12\">\n                        <div className=\"card\">\n                          <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                              <table className=\"table table-borderless mb-0\">\n                                <thead className=\"thead-light\">\n                                <tr>\n                                  <th>#</th>\n                                  <th>Variant Name</th>\n                                  <th>Code</th>\n                                  <th>Price</th>\n                                  <th></th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {productVariants.map((variant, index)=> {\n                                  return (\n                                    <tr key={index}>\n                                      <th scope=\"row\">{index + 1}</th>\n                                      <td>{variant.name}</td>\n                                      <td>{variant.code}</td>\n                                      <td>{variant.price}</td>\n\n                                      <td style={{float: \"right\"}}>\n                                        <a onClick={() => editVariant(index)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                          <i className=\"fa fa-fw fa-edit\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"edit\"></i>\n                                        </a>\n                                      </td>\n\n                                      <td style={{float: \"right\"}}>\n                                        <a onClick={()=> deleteVariant(variant.id)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                          <i className=\"fa fa-fw fa-trash\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"remove\"></i>\n                                        </a>\n                                      </td>\n\n                                    </tr>\n                                  )\n                                })}\n\n                                </tbody>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                      </div> :\n                      \"\"\n                    }\n\n\n                    <br/>\n                    <br/>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n      {showModal ? <AddProductVariant toggleModal={displayModal} productVariants={variants} /> : \"\"}\n      {showEditModal ? <EditProductVariant toggleModal={displayEditModal} productVariant={variantToEdit} updateVariant={editVariant} /> : \"\"}\n      {showVariantUploadModal ? <VariantCsvUpload toggleModal={displayVariantModal} /> : \"\"}\n    </div>\n      :\n     <Redirect to=\"/products\" />\n  )\n}\n\nexport {AddProduct}","import React, {useEffect, useState} from 'react'\nimport { getCategory, createCategory } from '../../utils/auth-client'\nimport {useAuth} from '../../context/auth-context'\nimport LaddaButton, {SLIDE_UP, XXL} from \"react-ladda\";\nimport toastr from \"toastr\";\n/**\n * @return {string}\n */\nfunction AddGroupModal(props) {\n  const $ = window.$;\n  const {user} = useAuth();\n  const [loading, setLoading] = useState(false)\n  const [formValues, setFormValues] = useState({\n    name: '',\n    errors: {\n      name: '',\n    }});\n\n  useEffect(()=> {\n      window.$('#addGroup').modal('show');\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n  \n  const handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = formValues.errors;\n    switch (name) {\n      case \"name\":\n        errors.name =\n            value.length <= 2\n                ? \" name of category must be more than 2 characters long!\"\n                : \"\";\n        break;\n      default:\n        break;\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value\n      }\n    });\n  };\n  \n  const handleSubmit = async (e) => {\n\n    setLoading(true)\n    e.preventDefault();\n    const { name } = formValues;\n    if (name.length > 2) {\n      const  church_group = user[0].church_group;\n      await createCategory( { name });\n      setLoading(false)\n      $('.form_name').val(\"\");\n      toastr.success(\"category added successfully\");\n      $(\"#addGroup\").modal('toggle');\n      props.toggleModal(false);\n    } else {\n      toastr.error(\"name of category is empty\");\n      setLoading(false)\n    }\n  };\n  \n  const {errors} = formValues;\n\n  return (\n      props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >ADD A CATEGORY</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n                  \n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">Name of Category</label>\n                    <input type=\"text\" onChange={handleChange} name=\"name\" className=\"form-control form_name\" id=\"validationCustom01\" placeholder=\"Name\" required/>\n                    {errors.name.length > 0 && (\n                        <span className=\"addGroup__error\">{errors.name}</span>\n                    )}\n                  </div>\n                 \n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-secondary waves-effect waves-light\"\n                      data-dismiss=\"modal\" onClick={()=> closeModal() }>Close\n              </button>\n  \n              <LaddaButton\n                  loading={loading}\n                  onClick={handleSubmit}\n                  data-size={XXL}\n                  data-style={SLIDE_UP}\n                  data-spinner-size={30}\n                  data-spinner-color=\"#ddd\"\n                  data-spinner-lines={12}\n              >\n                Add Category\n              </LaddaButton>\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {AddGroupModal}\n\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nfunction NotFoud() {\n\n  return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"d-flex align-items-center min-vh-100\">\n              <div className=\"w-100 d-block my-5\">\n                <div className=\"row justify-content-center\">\n                  <div className=\"col-md-8 col-lg-5\">\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        \n                        <div className=\"mt-4 pt-3 text-center\">\n                          <div className=\"row justify-content-center\">\n                            <div className=\"col-6 my-4\">\n                              CURRENTLY NO DATA\n                            </div>\n                          </div>\n                          <h3 className=\"expired-title mb-4 mt-3\">No data to Display</h3>\n                          <p className=\"text-muted mt-3\"> When the resource is filled there will be data to display</p>\n                        </div>\n                      \n                        <div className=\"mb-3 mt-4 text-center\">\n                          <Link to=\"/\" className=\"btn btn-primary btn-block\">Back to Home</Link>\n                        </div>\n                      </div>\n                     \n                    </div>\n                    \n                \n                  </div>\n                  \n                </div>\n               \n              </div>\n             \n            </div>\n           \n          </div>\n          \n        </div>\n        \n      </div>\n  )\n}\n\nexport {NotFoud}","import React, {useEffect, useState} from 'react'\nimport { createProductType } from '../../utils/auth-client'\nimport {useAuth} from '../../context/auth-context'\nimport LaddaButton, {SLIDE_UP, XXL} from \"react-ladda\";\nimport toastr from \"toastr\";\n/**\n * @return {string}\n */\nfunction AddProductType(props) {\n  const $ = window.$;\n  const {user} = useAuth();\n  const [loading, setLoading] = useState(false)\n  const [formValues, setFormValues] = useState({\n    name: '',\n    errors: {\n      name: '',\n    }});\n\n  useEffect(()=> {\n    window.$('#addGroup').modal('show');\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = formValues.errors;\n    switch (name) {\n      case \"name\":\n        errors.name =\n          value.length <= 2\n            ? \" product type must be more than 2 characters long!\"\n            : \"\";\n        break;\n      default:\n        break;\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value\n      }\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    setLoading(true)\n    e.preventDefault();\n    const { name } = formValues;\n    if (name.length > 2) {\n      let x = await createProductType( { name });\n      console.log(\"XXXXXX \", x)\n      setLoading(false)\n      $('.form_name').val(\"\");\n      toastr.success(\"category added successfully\");\n    } else {\n      toastr.error(\"name of category is empty\");\n      setLoading(false)\n    }\n  };\n\n  const {errors} = formValues;\n\n  return (\n    props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >ADD PRODUCT TYPE</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n\n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">Name of Category</label>\n                    <input type=\"text\" onChange={handleChange} name=\"name\" className=\"form-control form_name\" id=\"validationCustom01\" placeholder=\"Name\" required/>\n                    {errors.name.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.name}</span>\n                    )}\n                  </div>\n\n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-secondary waves-effect waves-light\"\n                      data-dismiss=\"modal\" onClick={()=> closeModal() }>Close\n              </button>\n\n              <LaddaButton\n                loading={loading}\n                onClick={handleSubmit}\n                data-size={XXL}\n                data-style={SLIDE_UP}\n                data-spinner-size={30}\n                data-spinner-color=\"#ddd\"\n                data-spinner-lines={12}\n              >\n                Add Category\n              </LaddaButton>\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {AddProductType}\n\n","import React, {useState} from 'react'\nimport {Link } from 'react-router-dom'\nimport {useAuth} from '../context/auth-context'\nimport {AddGroupModal} from './modals/add_category'\nimport {AddProductType} from './modals/add_product-type'\n\nfunction Header() {\n  let {user, logout} = useAuth();\n  const [showModal, setShowModal] = useState(false);\n  const [showProductType, setShowProductType] = useState(false);\n\n  const displayModal = (value) => {\n    setShowModal(value)\n    setShowProductType(value)\n  };\n  \n  return (\n    <>\n      \n      <header id=\"page-topbar\">\n        <div className=\"navbar-header\">\n          <div className=\"d-flex align-items-left\">\n            <button type=\"button\" className=\"btn btn-sm mr-2 d-lg-none px-3 font-size-16 header-item waves-effect\"\n                    id=\"vertical-menu-btn\">\n              <i className=\"fa fa-fw fa-bars\"></i>\n            </button>\n\n          </div>\n        \n          <div className=\"d-flex align-items-center\">\n          \n            <div className=\"dropdown d-none d-sm-inline-block ml-2\">\n              <button type=\"button\" className=\"btn header-item noti-icon waves-effect\"\n                      id=\"page-header-search-dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                      aria-expanded=\"false\">\n                <i className=\"mdi mdi-magnify\"></i>\n              </button>\n              <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\"\n                   aria-labelledby=\"page-header-search-dropdown\">\n              \n                <form className=\"p-3\">\n                  <div className=\"form-group m-0\">\n                    <div className=\"input-group\">\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Search ...\"\n                             aria-label=\"Recipient's username\"/>\n                        <div className=\"input-group-append\">\n                          <button className=\"btn btn-primary\" type=\"submit\"><i\n                              className=\"mdi mdi-magnify\"></i></button>\n                        </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n            {/*<div className=\"dropdown d-inline-block\">\n              <button type=\"button\" className=\"btn header-item noti-icon waves-effect\"\n                      id=\"page-header-notifications-dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                      aria-expanded=\"false\">\n                <i className=\"mdi mdi-bell\"></i>\n                <span className=\"badge badge-danger badge-pill\">3</span>\n              </button>\n              <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\"\n                   aria-labelledby=\"page-header-notifications-dropdown\">\n                <div className=\"p-3\">\n                  <div className=\"row align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"m-0\"> Notifications </h6>\n                    </div>\n                    <div className=\"col-auto\">\n                      <a href=\"#!\" className=\"small\"> View All</a>\n                    </div>\n                  </div>\n                </div>\n                <div data-simplebar style={{maxHeight: \"230px\"}}>\n                  <a href=\"/#\" className=\"text-reset notification-item\">\n                    <div className=\"media\">\n                      <img src=\"./images/users/avatar-2.jpg\"\n                           className=\"mr-3 rounded-circle avatar-xs\" alt=\"user-pic\"/>\n                        <div className=\"media-body\">\n                          <h6 className=\"mt-0 mb-1\">Samuel Coverdale</h6>\n                          <p className=\"font-size-13 mb-1\">You have new follower on Instagram</p>\n                          <p className=\"font-size-12 mb-0 text-muted\"><i\n                              className=\"mdi mdi-clock-outline\"></i> 2 min ago</p>\n                        </div>\n                    </div>\n                  </a>\n                  <a href=\"/#\" className=\"text-reset notification-item\">\n                    <div className=\"media\">\n                      <div className=\"avatar-xs mr-3\">\n                                            <span className=\"avatar-title bg-success rounded-circle\">\n                                                <i className=\"mdi mdi-cloud-download-outline\"></i>\n                                            </span>\n                      </div>\n                      <div className=\"media-body\">\n                        <h6 className=\"mt-0 mb-1\">Download Available !</h6>\n                        <p className=\"font-size-13 mb-1\">Latest version of admin is now available.\n                          Please download here.</p>\n                        <p className=\"font-size-12 mb-0 text-muted\"><i\n                            className=\"mdi mdi-clock-outline\"></i> 4 hours ago</p>\n                      </div>\n                    </div>\n                  </a>\n                  <a href=\"/#\" className=\"text-reset notification-item\">\n                    <div className=\"media\">\n                      <img src=\"./images/users/avatar-3.jpg\"\n                           className=\"mr-3 rounded-circle avatar-xs\" alt=\"user-pic\"/>\n                        <div className=\"media-body\">\n                          <h6 className=\"mt-0 mb-1\">Victoria Mendis</h6>\n                          <p className=\"font-size-13 mb-1\">Just upgraded to premium account.</p>\n                          <p className=\"font-size-12 mb-0 text-muted\"><i\n                              className=\"mdi mdi-clock-outline\"></i> 1 day ago</p>\n                        </div>\n                    </div>\n                  </a>\n                </div>\n                <div className=\"p-2 border-top\">\n                  <a className=\"btn btn-sm btn-light btn-block text-center\" href=\"/#\">\n                    <i className=\"mdi mdi-arrow-down-circle mr-1\"></i> Load More..\n                  </a>\n                </div>\n              </div>\n            </div>*/}\n            <div className=\"dropdown d-inline-block ml-2\">\n              <button type=\"button\" className=\"btn header-item waves-effect\" id=\"page-header-user-dropdown\"\n                      data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                <img className=\"rounded-circle header-profile-user\" src=\"/images/users/avatar-3.jpg\"\n                     alt=\"Header Avatar\"/>\n                  <span className=\"d-none d-sm-inline-block ml-1\">{user.name}</span>\n                  <i className=\"mdi mdi-chevron-down d-none d-sm-inline-block\"></i>\n              </button>\n              <div className=\"dropdown-menu dropdown-menu-right\">\n                <a className=\"dropdown-item d-flex align-items-center justify-content-between\"\n                   href=\"/#\">\n                  Settings\n                </a>\n                \n                <a className=\"dropdown-item d-flex align-items-center justify-content-between\"\n                   href=\"/#\"\n                   onClick={()=> {logout()}}>\n                  <span>Log Out</span>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n      {showModal ? <AddGroupModal toggleModal={displayModal}/> : \"\"}\n      {showProductType ? <AddProductType toggleModal={displayModal}/> : \"\"}\n    </>\n  )\n}\n\nexport {Header}","import React from 'react'\nimport {Link } from 'react-router-dom'\nfunction SideBar() {\n  return (\n      <>\n        <div className=\"vertical-menu\">\n    \n          <div data-simplebar className=\"h-100\">\n      \n            <div className=\"navbar-brand-box\">\n              <br/>\n              <h5>\n                <a href=\"/\" style={{color: \"white\"}}>Grocesries2go</a>\n              </h5>\n             \n            </div>\n      \n            \n            <div id=\"sidebar-menu\">\n            \n              <ul className=\"metismenu list-unstyled\" id=\"side-menu\">\n                <li className=\"menu-title\">Menu</li>\n          \n                <li>\n                  <Link to=\"/\" className=\"waves-effect\"> <i className='bx bx-home-smile'></i><span\n                      className=\"badge badge-pill badge-primary float-right\">7</span><span>Dashboard</span></Link>\n                </li>\n\n\n                <li>\n                  <Link to=\"/registrations\" className=\"waves-effect\"> <i className='bx bx-group'></i><span>Registration</span> </Link>\n                </li>\n\n                {/*<li>\n                  <a href=\"#\" className=\"has-arrow waves-effect\"><i\n                    className=\"bx bx-cog\"></i><span>Inventory</span></a>\n                  <ul className=\"sub-menu\" aria-expanded=\"false\">\n                    <li><Link to=\"/products/list\" className=\"waves-effect\"><span>Products</span> </Link></li>\n                    <li><Link to=\"/categories\" className=\"waves-effect\"><span>Categories</span> </Link></li>\n                    <li><Link to=\"/product-types\" className=\"waves-effect\"><span>Product Types</span> </Link></li>\n                    <li><Link to=\"/products/list\" className=\"waves-effect\"><span>Inventory  Report</span> </Link></li>\n                  </ul>\n                </li>*/}\n\n               {/* <li>\n                  <a href=\"/#\" className=\"has-arrow waves-effect\"><i\n                      className=\"bx bx-pound\"></i><span>Accounting</span></a>\n                  <ul className=\"sub-menu\" aria-expanded=\"false\">\n                    <li><a href=\"ui-buttons.html\">Buttons</a></li>\n                    <li><a href=\"ui-cards.html\">Cards</a></li>\n\n\n                  </ul>\n                </li>*/}\n\n\n  \n  \n                <li>\n                  <a href=\"/#\" className=\"has-arrow waves-effect\"><i\n                      className=\"bx bx-cog\"></i><span>Settings</span></a>\n                  <ul className=\"sub-menu\" aria-expanded=\"false\">\n                    <li><a href=\"ui-buttons.html\">User</a></li>\n                    <li><a href=\"ui-cards.html\">Sms</a></li>\n                  </ul>\n                </li>\n                \n                \n              </ul>\n            </div>\n           \n          </div>\n        </div>\n      \n      </>\n  \n  );\n}\n\nexport {SideBar}","import React, {useEffect, useState} from 'react'\nimport {uploadProductCsv} from '../../utils/auth-client'\nimport { ExportToCsv } from \"export-to-csv\";\nimport toastr from \"toastr\";\n/**\n * @return {string}\n */\nfunction ProductCsvUpload(props) {\n  const $ = window.$;\n  const [loading, setLoading] = useState(false);\n  const [formValues, setFormValues] = useState({\n    file: '',\n    errors: {}\n  });\n\n  useEffect(()=> {\n    window.$('#addGroup').modal('show');\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { file } = formValues;\n    setLoading(true);\n    let errors = formValues.errors;\n    for (let val in formValues) {\n      if (val === \"file\") {\n        if (!file.length) {\n          errors.file = \"kindly upload a csv file\";\n        }\n      }\n    }\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setLoading(false)\n      }\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n    delete formValues.errors\n    let formData = new FormData();\n    formData.append('file', file[0])\n    let data = await uploadProductCsv(formData);\n    if (data.status === 'success') {\n      toastr.success(\"product uploaded\")\n      $(\"#addGroup\").modal('toggle');\n      props.toggleModal(false);\n    }\n    console.log(\"data \")\n  };\n\n  const downloadSampleCsv = async () => {\n    let data = [{\n      name: \"milo\",\n      description: \"a nourishing bevereage for you\",\n      productTypeId: \"SgCBZ8Bl3QMzz7WOIV\",\n      categoryId: \"JnrkWvLZ9Vwqzo4LSn\",\n    }];\n    const options = {\n      fieldSeparator: \",\",\n      quoteStrings: '\"',\n      decimalSeparator: \".\",\n      showLabels: true,\n      showTitle: false,\n      title: \"Product Sample\",\n      useTextFile: false,\n      useBom: true,\n      filename: \"Product CSV\",\n      useKeysAsHeaders: true\n    };\n    const csvExporter = new ExportToCsv(options);\n    csvExporter.generateCsv(data);\n  }\n\n  const {errors} = formValues;\n\n  return (\n    props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >Upload Product By CSV</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n\n                  <p>Kindly click <a href=\"#\" onClick={downloadSampleCsv}>here</a> for a sample upload</p>\n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">CSV file</label>\n                    <input type=\"file\" name=\"file\" onChange={handleChange} className=\"dropify\" data-height=\"90\" data-allowed-file-extensions=\"csv\" data-max-file-size=\"500K\"/>\n                    {errors.file && errors.file.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.file}</span>\n                    )}\n                  </div>\n\n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n\n              {!loading ?\n              <button\n                type=\"button\"\n                onClick={handleSubmit}\n                className=\"btn btn-primary btn-large waves-effect waves-light\"\n                style={{ margin: \"auto\", display: \"block\", width: \"200px\" }}\n              >\n                Upload Csv\n              </button> :\n              <button type=\"button\"\n                      className=\"btn btn-primary btn-large waves-effect waves-light\"\n                      style={{margin: \"auto\", display: \"block\", width: \"200px\", opacity: \"0.4\"}}>\n                Uploading  Csv .....\n              </button>\n              }\n\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {ProductCsvUpload}\n\n","import React, {useEffect, useState, useRef} from \"react\";\nimport {getProducts, removeProduct} from \"../../utils/auth-client\";\nimport Swal from \"sweetalert2\";\nimport {Redirect} from \"react-router\";\nimport {ProductCsvUpload} from \"../../components/modals/product_csv_upload\";\nimport {FullPageSpinner, Loader} from \"../../components/lib\";\nimport {Link} from \"react-router-dom\";\nfunction ProductList() {\n\n  const $ = window.jQuery\n  const [products, setProducts] = useState([]);\n\n  let [page, setPage] = useState(1);\n\n  const [productToEdit, setProductToEdit] = useState(false)\n\n  const [productId, setProductId] = useState(\"\")\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [ids, setIds] = useState([])\n\n  useEffect(() => {\n    (async function(){\n      const {data} = await getProducts(1)\n      setProducts(data)\n      const table = document.getElementById('datatable-buttons');\n      if (table) {\n        window.$('#datatable-buttons').DataTable({\n          \"lengthMenu\": [[20, 50, 100, -1], [20, 50, 100, \"All\"]],\n        });\n        window.$('input[type=search]').addClass('form-control');\n      }\n\n      let newPage = page;\n      let newProducts = data\n      const scrollHandler = async (e) => {\n        let threshold, target = $(\"#showMoreResults\");\n        if (!target.length) return;\n        threshold = $(window).scrollTop() + $(window).height() - target.height();\n        if (target.offset().top < threshold) {\n          if (!target.data(\"visible\")) {\n            target.data(\"visible\", true);\n            newPage += 1;\n            setPage(newPage)\n            const {data} = await getProducts(newPage)\n            newProducts = [...newProducts, ...data]\n            setProducts(newProducts)\n          }\n        } else {\n          if (target.data(\"visible\")) {\n            target.data(\"visible\", false);\n          }\n        }\n      };\n      $(window).on('scroll', scrollHandler);\n\n    })()\n\n  }, [showModal])\n\n  const editProduct = (id) => {\n    setProductToEdit(true)\n    setProductId(id)\n  }\n\n  const deleteProduct = async (product) => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: `You will not be able to recover this product ${product.name}!`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then( async (result) => {\n      if (result.value) {\n          const result = await removeProduct(product)\n        console.log(result)\n      }\n    })\n  }\n\n  const displayModal = (value) => {\n    setShowModal(value)\n  };\n\n  const deleteMultipleProduct = async () => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: `You will not be able to recover these selected products !`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete them!',\n      cancelButtonText: 'No, keep them'\n    }).then( async (result) => {\n      if (result.value) {\n        const result = await removeProduct(ids)\n        console.log(result)\n      }\n    })\n  }\n  const thicked = (_id) => {\n    setIds(oldArray => [...oldArray, _id]);\n  }\n\n\n  return (\n    !productToEdit ?\n      <>\n       <div className=\"main-content\">\n          <div className=\"page-content\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"page-title-box d-flex align-items-center justify-content-between\">\n                    <h4 className=\"mb-0 font-size-18\">Products</h4>\n                    <div className=\"page-title-right\">\n                      <div className=\"btn-group\" role=\"group\" style={{marginRight: \"80px\"}}>\n                        <button id=\"btnGroupDrop1\" type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                          Action <i className=\"mdi mdi-chevron-down\"></i>\n                        </button>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\" x-placement=\"bottom-start\"\n                             style={{position: \"absolute\", willChange: \"transform\", top: \"0px\", left: \"-70px\", transform: \"translate3d(0px, 36px, 0px)\"}}>\n\n                          <Link to=\"/add-product\" className=\"dropdown-item\">\n                            Add Product\n                          </Link>\n\n                          <a href=\"#\" onClick={e => { setShowModal(true) }} className=\"dropdown-item\">\n                            Upload Product Csv\n                          </a>\n\n                          { ids.length ? <a href=\"#\" onClick={ e => { deleteMultipleProduct()} } className=\"dropdown-item\">\n                           Delete Selected Product(s)\n                          </a> : \"\"}\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n\n                    <div className=\"card-body\">\n                      {\n                        !products.length ?  <Loader /> :\n                          <div className=\"table-responsive\">\n                            <table className=\"table mb-0\">\n                              <thead className=\"thead-light\">\n                              <tr role=\"row\">\n                                <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                                </th>\n                                <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                    colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                    aria-label=\"Name: activate to sort column descending\">#\n                                </th>\n                                <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                    colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                    aria-label=\"Name: activate to sort column descending\">Name\n                                </th>\n                                <th className=\"sorting\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                    colSpan={1} style={{width: '397px'}}\n                                    aria-label=\"Position: activate to sort column ascending\">Product Type\n                                </th>\n                                <th className=\"sorting\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                    colSpan={1} style={{width: '202px'}}\n                                    aria-label=\"Office: activate to sort column ascending\">Status\n                                </th>\n                                <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                                </th>\n                                <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                                </th>\n\n                              </tr>\n                              </thead>\n                              <tbody>\n                              {products.map((product, index)=> {\n                                return (\n                                  <tr key={index}>\n                                    <th>\n                                      <div className=\"custom-control custom-checkbox\">\n                                        <input type=\"checkbox\" onClick={() => thicked(product._id)} className=\"custom-control-input\" id={`customCheck1${index}`} />\n                                        <label className=\"custom-control-label\" htmlFor={`customCheck1${index}`}></label>\n                                      </div>\n                                    </th>\n                                    <th scope=\"row\">{index+1}</th>\n                                    <td>{product.name}</td>\n                                    <td>{product.productType}</td>\n                                    <td>{product.status}</td>\n                                    <td>\n                                      <a onClick={() => editProduct(product._id)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                        <i className=\"fa fa-fw fa-edit\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"edit\"></i>\n                                      </a>\n                                    </td>\n                                    <td>\n                                      <a onClick={()=> deleteProduct(product)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                        <i className=\"fa fa-fw fa-trash\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"remove\"></i>\n                                      </a>\n                                    </td>\n                                  </tr>\n                                )\n                              })}\n                              <div id=\"showMoreResults\"> </div>\n                              </tbody>\n                            </table>\n                          </div>\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n       </div>\n       {showModal ? <ProductCsvUpload toggleModal={displayModal}/> : \"\"}\n      </>\n      :\n       <Redirect to={\"/product/edit/\"+productId} state={\"productId\"}/>\n\n  )\n}\n\nexport {ProductList}","import React, {useEffect,useState} from 'react'\nimport Select from \"react-select\";\nimport Swal from 'sweetalert2'\nimport {Link, Redirect} from \"react-router-dom\";\nimport {getCategory, updateProduct, getProductType,\n  getProductById, updateImage, removeVariant, updateVariant} from \"../../utils/auth-client\";\nimport toastr from \"toastr\";\nimport {AddProductVariant} from \"../../components/modals/product_variant/add_product_variant\";\nimport {EditProductVariant} from \"../../components/modals/product_variant/edit_product_variant\";\nimport {VariantCsvUpload} from \"../../components/modals/variant_csv_upload\";\nimport {Loader} from \"../../components/lib\";\n\n\nfunction ProductEdit(props) {\n\n  const productId = props.match.params.productId\n  const baseUrl = process.env.REACT_APP_BACKEND_URL\n  const [formValues, setFormValues] = useState({\n    _id: productId,\n    name: \"\",\n    description: \"\",\n    productTypeId: \"\",\n    productType: \"\",\n    categoryId: \"\",\n    category: \"\",\n    productVariants: \"\",\n    productImage:\"\",\n    errors: {}\n  });\n  const [showVariantUploadModal, setShowVariantUploadModal] = useState(false);\n  const $ = window.$;\n\n  useEffect(()=> {\n    ( async ()=> {\n      let data = await getProductById(productId)\n      if(!data.data) {\n        window.location.replace(\"/\")\n      }\n      data = data.data\n      //modify product variant\n      data.productVariants.forEach((val, index) => val.id = index)\n      setFormValues((preVState)=> {\n        return {\n          ...preVState,\n          name: data.name || \"\",\n          description: data.description || \"\",\n          productTypeId: data.productTypeId || \"\",\n          productType: data.productType || \"\",\n          categoryId: data.categoryId || \"\",\n          category: data.category || \"\" ,\n          productVariants: data.productVariants,\n          productImage: data.productImage,\n        }\n      })\n      $('.dropify').dropify({\n        messages: {\n          'default': 'Drag and drop a file here or click',\n          'replace': 'Drag and drop or click to replace',\n          'remove':  'Remove',\n          'error':   'Ooops, something wrong happended.'\n        }\n      });\n    })()\n  },[showVariantUploadModal])\n\n  const [submit, setSubmit] = useState(false)\n\n  const [categories, setCategories] = useState([]);\n\n  const [productType, setProductType] = useState([]);\n\n  const [loading, setLoading] = useState(false);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [variantToEdit, setVariantToEdit] = useState([])\n\n  const [showEditModal, setEditModal] = useState(false);\n\n  const productTypeOptions = productType.map((pt)=> {\n    return {value: pt.name, label: pt.name, id: pt._id}\n  });\n\n  const categoryOptions = categories.map((cat)=> {\n    return { value: cat.name, label: cat.name, id: cat._id }\n  });\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    let errors = formValues.errors;\n    validateForm(errors);\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setLoading(false)\n        return\n      }\n    }\n    delete formValues.errors\n    const {productVariants} = formValues\n    if (!productVariants.length) {\n      toastr.error(\"Kindly add product variants\")\n      setLoading(false)\n      return\n    }\n\n    //update image if there is an update\n    if (typeof formValues.productImage !== \"string\") {\n      let formData = new FormData();\n      formData.append('file', formValues.productImage[0])\n      formData.append('_id', productId)\n      formData.append('collection', \"product\")\n      await updateImage(formData);\n    }\n\n    formValues.productVariants.forEach((pv)=> {\n      delete pv.productVariantImage\n    })\n    delete formValues.productImage\n\n    let data = await updateProduct(formValues);\n    setLoading(false)\n    if (data && data.status === \"Success\") {\n      toastr.success(\"Product Edited Successfully\");\n      setLoading(false)\n      setSubmit(true)\n    } else {\n      toastr.error(\"Edit Product Failed\");\n    }\n  }\n\n  const validateForm = errors => {\n    const { name, description, productTypeId, categoryId, productImage, productVariants } = formValues;\n    for (let val in formValues) {\n      if (val === \"name\") {\n        if (name.length <= 3) {\n          errors.name = \"variant name must be more than 3 characters long!\";\n        }\n      }\n\n      if (val === \"description\") {\n        if (description.length <= 3) {\n          errors.description = \"description of product must be more than 3 characters long!\";\n        }\n      }\n\n      if (val === \"productTypeId\") {\n        if (!productTypeId.length) {\n          errors.productTypeId = \"product type can't be empty\";\n        }\n      }\n\n      if (val === \"categoryId\") {\n        if (!categoryId.length) {\n          errors.categoryId = \"category can't be empty\";\n        }\n      }\n\n      if (val === \"productImage\") {\n        if (!productImage) {\n          errors.productImage = \"kindly upload an Image\";\n        }\n      }\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n  };\n\n  const displayModal = (value) => {\n    setShowModal(value)\n  };\n\n  const displayVariantModal = (value) => {\n    setShowVariantUploadModal(value)\n  };\n\n  const displayEditModal = (value) => {\n    setEditModal(value)\n  };\n\n  const variants = (variants) => {\n    variants = variants || []\n    let { productVariants } = formValues\n    if (productVariants.length) {\n      variants = variants.map((val)=> {\n        return {...val, id: productVariants.length }\n      })\n      productVariants = [...productVariants, ...variants]\n    } else {\n      productVariants = variants\n    }\n    setFormValues((prevState)=> {\n      return {\n        ...prevState,\n        productVariants: productVariants\n      }\n    })\n  }\n\n  const deleteVariant = (index) => {\n    const {productVariants} = formValues\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'You will not be able to recover this product variant!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then( async (result) => {\n      if (result.value) {\n        for(let variant of productVariants) {\n          removeVariant(productVariants[index])\n          productVariants.splice(index, 1);\n          setFormValues((prevState)=> {\n            return {\n              ...prevState,\n              productVariants\n            }\n          })\n        }\n      }\n    })\n  }\n\n  const editVariant = async (index, variant) => {\n    let { productVariants } = formValues\n    if (variant) {\n      const objIndex = productVariants.findIndex((obj => obj.id === index));\n      productVariants[objIndex].name = variant.name\n      productVariants[objIndex].price = variant.price\n      productVariants[objIndex].code = variant.code\n      productVariants[objIndex].quantityInCase = variant.quantityInCase\n      productVariants[objIndex].inventory = variant.inventory\n      productVariants[objIndex].uom = variant.uom\n      productVariants[objIndex].upc = variant.upc\n      productVariants[objIndex].description = variant.description\n      productVariants[objIndex].productVariantImage = variant.productVariantImage\n      productVariants[objIndex]._id = variant._id\n      await updateVariant(productVariants[objIndex])\n\n      if (typeof variant.productVariantImage !== \"string\" && typeof variant.productVariantImage !== \"undefined\") {\n        let formData = new FormData();\n        formData.append('file',  productVariants[objIndex].productVariantImage[0])\n        formData.append('_id', variant._id)\n        await updateImage(formData);\n      }\n\n\n      setFormValues((prevState) => {\n        return {\n          ...prevState,\n          productVariants: productVariants\n        }\n      })\n    } else {\n      setEditModal(true)\n      setVariantToEdit(productVariants[index])\n    }\n  }\n\n  const { errors, productVariants} = formValues;\n\n  return (\n    !submit ?\n      <div className=\"main-content\">\n\n        {\n          !formValues._id ?\n          <Loader /> : <div className=\"page-content\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"page-title-box d-flex align-items-center justify-content-between sticky\">\n                    <h4 className=\"mb-0 font-size-18\">Add a Prouct</h4>\n\n                    <div className=\"page-title-right\">\n                      <div className=\"btn-group\" role=\"group\">\n                        {!loading ?\n                          <button\n                            type=\"button\"\n                            onClick={handleSubmit}\n                            className=\"btn btn-primary btn-large waves-effect waves-light\"\n                            style={{ margin: \"auto\", display: \"block\", width: \"200px\", height: \"37px\", marginRight: \"10px\"}}\n                          >\n                            Update Product\n                          </button> :\n                          <button type=\"button\"\n                                  className=\"btn btn-primary btn-large waves-effect waves-light\"\n                                  style={{margin: \"auto\", display: \"block\", width: \"200px\", height: \"37px\", opacity: \"0.4\", marginRight: \"10px\"}}>\n                            Updating Product .....\n                          </button>\n                        }\n\n                        <div className=\"dropdown d-inline-block ml-2\">\n                          <button type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle\" id=\"page-header-user-dropdown\"\n                                  data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <span className=\"d-none d-sm-inline-block ml-1\">Action</span>\n                            <i className=\"mdi mdi-chevron-down d-none d-sm-inline-block\"></i>\n                          </button>\n                          <div className=\"dropdown-menu dropdown-menu-right\">\n                            <Link to=\"/products/list\" className=\"dropdown-item\">\n                              Product List\n                            </Link>\n                            <a href=\"#\" onClick={() => { setShowVariantUploadModal(true) }} className=\"dropdown-item\">\n                              Upload Product Var Csv\n                            </a>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\" style={{padding: \"4.25rem\"}}>\n                      <form className=\"needs-validation\" noValidate>\n                        <div className=\"form-row\">\n                          <div className=\"col-md-12 mb-3\">\n                            <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\" style={{paddingLeft: \"0px\"}}>Product Name</label>\n                            <input type=\"text\" onChange={handleChange} name=\"name\" value={formValues.name} className=\"form-control\" id=\"colFormLabel\"/>\n                            {errors.name && errors.name.length > 0 && (\n                              <span className=\"addGroup__error\">{errors.name}</span>\n                            )}\n                          </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                          <div className=\"col-md-12 mb-3\">\n                            <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\" style={{paddingLeft: \"0px\"}}>Product Description</label>\n                            <textarea className=\"form-control\" value={formValues.description} id=\"exampleFormControlTextarea1\" onChange={handleChange} name=\"description\" rows=\"3\"></textarea>\n                            {errors.description && errors.description.length > 0 && (\n                              <span className=\"addGroup__error\">{errors.description}</span>\n                            )}\n                          </div>\n\n                        </div>\n\n                        <div className=\"form-row\">\n                          <div className=\"col-md-12 mb-3\">\n                            <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\" style={{paddingLeft: \"0px\"}}>Product Image</label>\n                            <input type=\"file\" multiple name=\"productImage\" onChange={handleChange} className=\"dropify\" data-height=\"150\" data-allowed-file-extensions=\"jpg png jpeg\"\n                                   data-max-file-size=\"500K\" data-default-file={`${baseUrl}/${formValues.productImage}`}/>\n                            {errors.productImage && errors.productImage.length > 0 && (\n                              <span className=\"addGroup__error\">{errors.productImage}</span>\n                            )}\n                          </div>\n\n                        </div>\n\n                        <div className=\"form-row\">\n                          <div className=\"col-md-6 mb-3\">\n                            <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\" style={{paddingLeft: \"0px\"}}>Product Type</label>\n                            <Select\n                              value={{ label: formValues.productType || \"Product Type\" }}\n                              onMenuOpen={ async ()=>{\n                                let data = await getProductType();\n                                setProductType(data.data);\n                              }}\n                              onChange={ async (option)=> {\n                                setFormValues(prevState => {\n                                  prevState.errors.productTypeId = \"\"\n                                  return {\n                                    ...prevState,\n                                    productTypeId: option.id,\n                                    productType: option.value\n                                  }\n                                })\n                              }}\n                              options={productTypeOptions}\n                              name=\"productTypeId\"\n                            />\n                            {errors.productTypeId && errors.productTypeId.length > 0 && (\n                              <span className=\"addGroup__error\">{errors.productTypeId}</span>\n                            )}\n                          </div>\n\n                          <div className=\"col-md-6 mb-3\">\n                            <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\" style={{paddingLeft: \"0px\"}}>Category</label>\n                            <Select\n                              value={{ label: formValues.category || \"Category\" }}\n                              onMenuOpen={ async ()=>{\n                                let data = await getCategory();\n                                setCategories(data.data);\n                              }}\n                              onChange={ async (option)=> {\n                                setFormValues(prevState => {\n                                  prevState.errors.categoryId = \"\"\n                                  return {\n                                    ...prevState,\n                                    categoryId: option.id,\n                                    category: option.value,\n                                  }\n                                })\n                              }}\n                              options={categoryOptions}\n                              name=\"categoryId\"\n                            />\n                            {errors.categoryId && errors.categoryId.length > 0 && (\n                              <span className=\"addGroup__error\">{errors.categoryId}</span>\n                            )}\n                          </div>\n\n\n                        </div>\n\n                        <br/>\n                        <button type=\"button\" onClick={e => { setShowModal(true) }}  className=\"btn btn-success waves-effect waves-light\" style={{float: \"right\"}}> <i className='bx bx-plus'></i> Add Variant </button>\n                        {errors.productVariants && errors.productVariants.length > 0 && (\n                          <span className=\"addGroup__error\">{errors.productVariants}</span>\n                        )}\n                        <br/>\n                        <br/>\n                        <br/>\n\n                        {\n                          !productVariants.length ? <Loader />\n                            : <div className=\"col-xl-12\">\n                              <div className=\"card\">\n                                <div className=\"card-body\">\n                                  <div className=\"table-responsive\">\n                                    <table className=\"table table-borderless mb-0\">\n                                      <thead className=\"thead-light\">\n                                      <tr>\n                                        <th>#</th>\n                                        <th>Variant Name</th>\n                                        <th>Code</th>\n                                        <th>Price</th>\n                                        <th></th>\n                                      </tr>\n                                      </thead>\n                                      <tbody>\n                                      {productVariants.map((variant, index)=> {\n                                        return (\n                                          <tr key={index}>\n                                            <th scope=\"row\">{index + 1}</th>\n                                            <td>{variant.name}</td>\n                                            <td>{variant.code}</td>\n                                            <td>{variant.price}</td>\n\n                                            <td style={{float: \"right\"}}>\n                                              <a onClick={() => editVariant(index)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                                <i className=\"fa fa-fw fa-edit\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"edit\"></i>\n                                              </a>\n                                            </td>\n\n                                            <td style={{float: \"right\"}}>\n                                              <a onClick={()=> deleteVariant(variant.id)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                                <i className=\"fa fa-fw fa-trash\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"remove\"></i>\n                                              </a>\n                                            </td>\n\n                                          </tr>\n                                        )\n                                      })}\n\n                                      </tbody>\n                                    </table>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                        }\n\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n        }\n\n        {showModal ? <AddProductVariant toggleModal={displayModal} productVariants={variants} /> : \"\"}\n        {showEditModal ? <EditProductVariant toggleModal={displayEditModal} productVariant={variantToEdit} updateVariant={editVariant} /> : \"\"}\n        {showVariantUploadModal ? <VariantCsvUpload toggleModal={displayVariantModal} /> : \"\"}\n      </div>\n      :\n      <Redirect to=\"/products/list\" />\n  )\n}\n\nexport {ProductEdit}","import React, {useEffect, useState} from 'react'\nimport {updateCategory} from '../../utils/auth-client'\nimport toastr from \"toastr\";\n/**\n * @return {string}\n */\nfunction EditCategories(props) {\n\n  const $ = window.$;\n  const [loading, setLoading] = useState(false);\n  const [formValues, setFormValues] = useState({\n    name: props.category.name || '',\n    _id: props.category._id || '',\n    errors: {}\n  });\n\n  useEffect(()=> {\n    window.$('#addGroup').modal('show');\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { name } = formValues;\n    setLoading(true);\n    let errors = formValues.errors;\n    for (let val in formValues) {\n      if (val === \"name\") {\n        if (name.length <= 3) {\n          errors.name = \"variant name must be more than 3 characters long!\";\n        }\n      }\n    }\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setLoading(false)\n      }\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n    delete formValues.errors\n    let data = await updateCategory(formValues);\n    if (data.status === 'success') {\n      toastr.success(\"product uploaded\")\n      $(\"#addGroup\").modal('toggle');\n      props.toggleModal(false);\n    }\n  };\n\n\n  const {errors} = formValues;\n\n  return (\n    props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >Update Category</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n\n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">Name</label>\n                    <input type=\"text\" onChange={handleChange} name=\"name\" value={formValues.name} className=\"form-control\" id=\"colFormLabel\"/>\n                    {errors.name && errors.name.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.name}</span>\n                    )}\n                  </div>\n\n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n\n              {!loading ?\n              <button\n                type=\"button\"\n                onClick={handleSubmit}\n                className=\"btn btn-primary btn-large waves-effect waves-light\"\n                style={{ margin: \"auto\", display: \"block\", width: \"200px\" }}\n              >\n                Update Category\n              </button> :\n              <button type=\"button\"\n                      className=\"btn btn-primary btn-large waves-effect waves-light\"\n                      style={{margin: \"auto\", display: \"block\", width: \"200px\", opacity: \"0.4\"}}>\n                Updating  Category .....\n              </button>\n              }\n\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {EditCategories}\n\n","import React, {useEffect, useState} from 'react'\nimport {uploadCategoryCsv} from '../../utils/auth-client'\nimport { ExportToCsv } from \"export-to-csv\";\nimport toastr from \"toastr\";\n/**\n * @return {string}\n */\nfunction CategoryCsvUpload(props) {\n  const $ = window.$;\n  const [loading, setLoading] = useState(false);\n  const [formValues, setFormValues] = useState({\n    file: '',\n    errors: {}\n  });\n\n  useEffect(()=> {\n    window.$('#addGroup').modal('show');\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { file } = formValues;\n    setLoading(true);\n    let errors = formValues.errors;\n    for (let val in formValues) {\n      if (val === \"file\") {\n        if (!file.length) {\n          errors.file = \"kindly upload a csv file\";\n        }\n      }\n    }\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setLoading(false)\n      }\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n    delete formValues.errors\n    let formData = new FormData();\n    formData.append('file', file[0])\n    let data = await uploadCategoryCsv(formData);\n    if (data.status === 'success') {\n      toastr.success(\"categories uploaded\")\n      $(\"#addGroup\").modal('toggle');\n      props.toggleModal(false);\n    }\n    console.log(\"data \")\n  };\n\n  const downloadSampleCsv = async () => {\n    let data = [{\n      name: \"toletries\"\n    }];\n    const options = {\n      fieldSeparator: \",\",\n      quoteStrings: '\"',\n      decimalSeparator: \".\",\n      showLabels: true,\n      showTitle: false,\n      title: \"Category Sample\",\n      useTextFile: false,\n      useBom: true,\n      filename: \"Category CSV\",\n      useKeysAsHeaders: true\n    };\n    const csvExporter = new ExportToCsv(options);\n    csvExporter.generateCsv(data);\n  }\n\n  const {errors} = formValues;\n\n  return (\n    props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >Upload Category By CSV</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n\n                  <p>Kindly click <a href=\"#\" onClick={downloadSampleCsv}>here</a> for a sample upload</p>\n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">CSV file</label>\n                    <input type=\"file\" name=\"file\" onChange={handleChange} className=\"dropify\" data-height=\"90\" data-allowed-file-extensions=\"csv\" data-max-file-size=\"500K\"/>\n                    {errors.file && errors.file.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.file}</span>\n                    )}\n                  </div>\n\n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n\n              {!loading ?\n                <button\n                  type=\"button\"\n                  onClick={handleSubmit}\n                  className=\"btn btn-primary btn-large waves-effect waves-light\"\n                  style={{ margin: \"auto\", display: \"block\", width: \"200px\" }}\n                >\n                  Upload Csv\n                </button> :\n                <button type=\"button\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light\"\n                        style={{margin: \"auto\", display: \"block\", width: \"200px\", opacity: \"0.4\"}}>\n                  Uploading  Csv .....\n                </button>\n              }\n\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {CategoryCsvUpload}\n\n","import React, {useEffect, useState} from \"react\";\nimport {getCategory, getProducts, removeProduct} from \"../../utils/auth-client\";\nimport Swal from \"sweetalert2\";\nimport {Redirect} from \"react-router\";\nimport {EditCategories} from \"./edit_categories_modal\";\nimport {EditProductVariant} from \"../../components/modals/product_variant/edit_product_variant\";\nimport {AddGroupModal} from \"../../components/modals/add_category\";\nimport {CategoryCsvUpload} from \"./create_categories_csv_modal\";\nimport {Loader} from \"../../components/lib\";\nfunction CategoryList() {\n\n  const $ = window.jQuery\n  const [categories, setcategories] = useState([]);\n\n  let [page, setPage] = useState(1);\n\n  const [categoryToEdit, setcategoryToEdit] = useState(\"\")\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showCsvModal, setshowCsvModal] = useState(false);\n\n  const [addCatModal, setAddCatModal] = useState(false);\n\n  useEffect(() => {\n    (async function(){\n      const {data} = await getCategory(1)\n      setcategories(data)\n      const table = document.getElementById('datatable-buttons');\n      if (table) {\n        window.$('#datatable-buttons').DataTable({\n          \"lengthMenu\": [[20, 50, 100, -1], [20, 50, 100, \"All\"]],\n        });\n        window.$('input[type=search]').addClass('form-control');\n      }\n\n      let newPage = page;\n      let newData = data\n      const scrollHandler = async (e) => {\n        let threshold, target = $(\"#showMoreResults\");\n        if (!target.length) return;\n        threshold = $(window).scrollTop() + $(window).height() - target.height();\n        if (target.offset().top < threshold) {\n          if (!target.data(\"visible\")) {\n            target.data(\"visible\", true);\n            newPage += 1;\n            setPage(newPage)\n            const {data} = await getCategory(newPage)\n            newData = [...newData, ...data]\n            setcategories(newData)\n          }\n        } else {\n          if (target.data(\"visible\")) {\n            target.data(\"visible\", false);\n          }\n        }\n      };\n      $(window).on('scroll', scrollHandler);\n    })()\n  }, [showModal, addCatModal])\n\n  const editCategory = async (index) => {\n    setShowModal(true)\n    setcategoryToEdit(categories[index])\n  }\n\n  const displayModal = (value) => {\n    setShowModal(value)\n    setAddCatModal(value)\n    setshowCsvModal(value)\n  };\n\n\n  return (\n      <>\n        <div className=\"main-content\">\n          <div className=\"page-content\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"page-title-box d-flex align-items-center justify-content-between\">\n                    <h4 className=\"mb-0 font-size-18\">Categories</h4>\n                    <div className=\"page-title-right\">\n                      <div className=\"btn-group\" role=\"group\" style={{marginRight: \"80px\"}}>\n                        <button id=\"btnGroupDrop1\" type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                          Action <i className=\"mdi mdi-chevron-down\"></i>\n                        </button>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\" x-placement=\"bottom-start\"\n                             style={{position: \"absolute\", willChange: \"transform\", top: \"0px\", left: \"-70px\", transform: \"translate3d(0px, 36px, 0px)\"}}>\n\n                          <a href=\"#\" onClick={e => { setAddCatModal(true) }} className=\"dropdown-item notify-item\">\n                            Add Category\n                          </a>\n                          <a href=\"#\" onClick={e => { setshowCsvModal(true) }} className=\"dropdown-item\">\n                            Upload Category Csv\n                          </a>\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"table-responsive\">\n                          {!categories.length ? <Loader /> :\n                          <table className=\"table mb-0\">\n                            <thead className=\"thead-light\">\n                            <tr role=\"row\">\n                              <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                  colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                  aria-label=\"Name: activate to sort column descending\">#\n                              </th>\n                              <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                  colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                  aria-label=\"Name: activate to sort column descending\">Name\n                              </th>\n                              <th className=\"sorting\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                  colSpan={1} style={{width: '397px'}}\n                                  aria-label=\"Position: activate to sort column ascending\">Id\n                              </th>\n\n                              <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                              </th>\n                              <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                              </th>\n\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {categories.map((cat, index)=> {\n                              return (\n                                <tr key={index}>\n                                  <th scope=\"row\">{index+1}</th>\n                                  <td>{cat.name}</td>\n                                  <td>{cat._id}</td>\n                                  <td>\n\n                                    <a onClick={() => editCategory(index)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                      <i className=\"fa fa-fw fa-edit\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"edit\"></i>\n                                    </a>\n\n                                  </td>\n                                  <td>\n\n                                  </td>\n                                </tr>\n                              )\n                            })}\n                            <div id=\"showMoreResults\"> </div>\n                            </tbody>\n                          </table>\n                          }\n                        </div>\n\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n        {showModal ? <EditCategories toggleModal={displayModal} category={categoryToEdit}/> : \"\"}\n        {addCatModal ? <AddGroupModal toggleModal={displayModal}/> : \"\"}\n        {showCsvModal ? <CategoryCsvUpload toggleModal={displayModal}/> : \"\"}\n      </>\n\n\n  )\n}\n\nexport {CategoryList}","import React, {useEffect, useState} from 'react'\nimport { updateProductType} from '../../utils/auth-client'\nimport toastr from \"toastr\";\n/**\n * @return {string}\n */\nfunction EditProductType(props) {\n\n  const $ = window.$;\n  const [loading, setLoading] = useState(false);\n  const [formValues, setFormValues] = useState({\n    name: props.productType.name || '',\n    _id: props.productType._id || '',\n    errors: {}\n  });\n\n  useEffect(()=> {\n    window.$('#addGroup').modal('show');\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { name } = formValues;\n    setLoading(true);\n    let errors = formValues.errors;\n    for (let val in formValues) {\n      if (val === \"name\") {\n        if (name.length <= 3) {\n          errors.name = \"variant name must be more than 3 characters long!\";\n        }\n      }\n    }\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setLoading(false)\n      }\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n    delete formValues.errors\n    let data = await updateProductType(formValues);\n    if (data.status === 'success') {\n      toastr.success(\"product uploaded\")\n      $(\"#addGroup\").modal('toggle');\n      props.toggleModal(false);\n    }\n  };\n\n\n  const {errors} = formValues;\n\n  return (\n    props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >Update Product Type</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n\n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">Name</label>\n                    <input type=\"text\" onChange={handleChange} name=\"name\" value={formValues.name} className=\"form-control\" id=\"colFormLabel\"/>\n                    {errors.name && errors.name.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.name}</span>\n                    )}\n                  </div>\n\n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n\n              {!loading ?\n              <button\n                type=\"button\"\n                onClick={handleSubmit}\n                className=\"btn btn-primary btn-large waves-effect waves-light\"\n                style={{ margin: \"auto\", display: \"block\", width: \"200px\" }}\n              >\n                Update Product Type\n              </button> :\n              <button type=\"button\"\n                      className=\"btn btn-primary btn-large waves-effect waves-light\"\n                      style={{margin: \"auto\", display: \"block\", width: \"200px\", opacity: \"0.4\"}}>\n                Updating  Product Type .....\n              </button>\n              }\n\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {EditProductType}\n\n","import React, {useEffect, useState} from 'react'\nimport {uploadProductTypeCsv} from '../../utils/auth-client'\nimport { ExportToCsv } from \"export-to-csv\";\nimport toastr from \"toastr\";\n/**\n * @return {string}\n */\nfunction ProductTypeCsvUpload(props) {\n  const $ = window.$;\n  const [loading, setLoading] = useState(false);\n  const [formValues, setFormValues] = useState({\n    file: '',\n    errors: {}\n  });\n\n  useEffect(()=> {\n    window.$('#addGroup').modal('show');\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { file } = formValues;\n    setLoading(true);\n    let errors = formValues.errors;\n    for (let val in formValues) {\n      if (val === \"file\") {\n        if (!file.length) {\n          errors.file = \"kindly upload a csv file\";\n        }\n      }\n    }\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setLoading(false)\n      }\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n    delete formValues.errors\n    let formData = new FormData();\n    formData.append('file', file[0])\n    let data = await uploadProductTypeCsv(formData);\n    if (data.status === 'success') {\n      toastr.success(\"categories uploaded\")\n      $(\"#addGroup\").modal('toggle');\n      props.toggleModal(false);\n    }\n    console.log(\"data \")\n  };\n\n  const downloadSampleCsv = async () => {\n    let data = [{\n      name: \"toletries\"\n    }];\n    const options = {\n      fieldSeparator: \",\",\n      quoteStrings: '\"',\n      decimalSeparator: \".\",\n      showLabels: true,\n      showTitle: false,\n      title: \"Product Type Sample\",\n      useTextFile: false,\n      useBom: true,\n      filename: \"Product_Type CSV\",\n      useKeysAsHeaders: true\n    };\n    const csvExporter = new ExportToCsv(options);\n    csvExporter.generateCsv(data);\n  }\n\n  const {errors} = formValues;\n\n  return (\n    props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >Upload Product Type By CSV</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n\n                  <p>Kindly click <a href=\"#\" onClick={downloadSampleCsv}>here</a> for a sample upload</p>\n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">CSV file</label>\n                    <input type=\"file\" name=\"file\" onChange={handleChange} className=\"dropify\" data-height=\"90\" data-allowed-file-extensions=\"csv\" data-max-file-size=\"500K\"/>\n                    {errors.file && errors.file.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.file}</span>\n                    )}\n                  </div>\n\n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n\n              {!loading ?\n                <button\n                  type=\"button\"\n                  onClick={handleSubmit}\n                  className=\"btn btn-primary btn-large waves-effect waves-light\"\n                  style={{ margin: \"auto\", display: \"block\", width: \"200px\" }}\n                >\n                  Upload Csv\n                </button> :\n                <button type=\"button\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light\"\n                        style={{margin: \"auto\", display: \"block\", width: \"200px\", opacity: \"0.4\"}}>\n                  Uploading  Csv .....\n                </button>\n              }\n\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {ProductTypeCsvUpload}\n\n","import React, {useEffect, useState} from 'react'\nimport { createProductType } from '../../utils/auth-client'\nimport {useAuth} from '../../context/auth-context'\nimport LaddaButton, {SLIDE_UP, XXL} from \"react-ladda\";\nimport toastr from \"toastr\";\n/**\n * @return {string}\n */\nfunction AddProductTypeModal(props) {\n  const $ = window.$;\n  const {user} = useAuth();\n  const [loading, setLoading] = useState(false)\n  const [formValues, setFormValues] = useState({\n    name: '',\n    errors: {\n      name: '',\n    }});\n\n  useEffect(()=> {\n    window.$('#addGroup').modal('show');\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = formValues.errors;\n    switch (name) {\n      case \"name\":\n        errors.name =\n          value.length <= 2\n            ? \" name of category must be more than 2 characters long!\"\n            : \"\";\n        break;\n      default:\n        break;\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value\n      }\n    });\n  };\n\n  const handleSubmit = async (e) => {\n\n    setLoading(true)\n    e.preventDefault();\n    const { name } = formValues;\n    if (name.length > 2) {\n      const  church_group = user[0].church_group;\n      await createProductType( { name });\n      setLoading(false)\n      $('.form_name').val(\"\");\n      toastr.success(\"product type added successfully\");\n      $(\"#addGroup\").modal('toggle');\n      props.toggleModal(false);\n    } else {\n      toastr.error(\"name of category is empty\");\n      setLoading(false)\n    }\n  };\n\n  const {errors} = formValues;\n\n  return (\n    props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >ADD PRODUCT TYPE</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n\n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">Name of Product Type</label>\n                    <input type=\"text\" onChange={handleChange} name=\"name\" className=\"form-control form_name\" id=\"validationCustom01\" placeholder=\"Name\" required/>\n                    {errors.name.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.name}</span>\n                    )}\n                  </div>\n\n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-secondary waves-effect waves-light\"\n                      data-dismiss=\"modal\" onClick={()=> closeModal() }>Close\n              </button>\n\n              <LaddaButton\n                loading={loading}\n                onClick={handleSubmit}\n                data-size={XXL}\n                data-style={SLIDE_UP}\n                data-spinner-size={30}\n                data-spinner-color=\"#ddd\"\n                data-spinner-lines={12}\n              >\n                Add Product Type\n              </LaddaButton>\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {AddProductTypeModal}\n\n","import React, {useEffect, useState} from \"react\";\nimport {getProductType} from \"../../utils/auth-client\";\nimport {EditProductType} from \"./edit_product_type_modal\";\nimport {AddGroupModal} from \"../../components/modals/add_category\";\nimport {ProductTypeCsvUpload} from \"./create_product_type_csv_modal\";\nimport {AddProductTypeModal} from \"./add_product_type_modal\";\nimport {Loader} from \"../../components/lib\";\nfunction ProductTypeList() {\n\n  const [productType, setProductType] = useState([]);\n\n  const [productTypeToEdit, setProductTypeToEdit] = useState(\"\")\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showCsvModal, setshowCsvModal] = useState(false);\n\n  const [addCatModal, setAddCatModal] = useState(false);\n\n  useEffect(() => {\n    (async function(){\n      const {data} = await getProductType()\n      setProductType(data)\n      const table = document.getElementById('datatable-buttons');\n      if (table) {\n        window.$('#datatable-buttons').DataTable({\n          \"lengthMenu\": [[20, 50, 100, -1], [20, 50, 100, \"All\"]],\n        });\n        window.$('input[type=search]').addClass('form-control');\n      }\n    })()\n  }, [showModal, addCatModal, showCsvModal])\n\n  const editCategory = async (index) => {\n    setShowModal(true)\n    setProductTypeToEdit(productType[index])\n  }\n\n  const displayModal = (value) => {\n    setShowModal(value)\n    setAddCatModal(value)\n    setshowCsvModal(value)\n  };\n\n\n  return (\n      <>\n        <div className=\"main-content\">\n          <div className=\"page-content\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"page-title-box d-flex align-items-center justify-content-between\">\n                    <h4 className=\"mb-0 font-size-18\">Products</h4>\n                    <div className=\"page-title-right\">\n                      <div className=\"btn-group\" role=\"group\" style={{marginRight: \"80px\"}}>\n                        <button id=\"btnGroupDrop1\" type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                          Action <i className=\"mdi mdi-chevron-down\"></i>\n                        </button>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\" x-placement=\"bottom-start\"\n                             style={{position: \"absolute\", willChange: \"transform\", top: \"0px\", left: \"-70px\", transform: \"translate3d(0px, 36px, 0px)\"}}>\n\n                            <a href=\"#\" onClick={e => { setAddCatModal(true) }} className=\"dropdown-item notify-item\">\n                              Add Product Type\n                            </a>\n                            <a href=\"#\" onClick={e => { setshowCsvModal(true) }} className=\"dropdown-item\">\n                              Upload Product Type Csv\n                            </a>\n\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      {\n                        !productType.length ? <Loader /> :\n                          <div className=\"table-responsive\">\n                          <table className=\"table mb-0\">\n                            <thead className=\"thead-light\">\n                            <tr role=\"row\">\n                              <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                  colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                  aria-label=\"Name: activate to sort column descending\">#\n                              </th>\n                              <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                  colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                  aria-label=\"Name: activate to sort column descending\">Name\n                              </th>\n                              <th className=\"sorting\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                  colSpan={1} style={{width: '397px'}}\n                                  aria-label=\"Position: activate to sort column ascending\">Id\n                              </th>\n\n                              <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                              </th>\n                              <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                              </th>\n\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {productType.map((cat, index)=> {\n                              return (\n                                <tr key={index}>\n                                  <th scope=\"row\">{index+1}</th>\n                                  <td>{cat.name}</td>\n                                  <td>{cat._id}</td>\n                                  <td>\n\n                                    <a onClick={() => editCategory(index)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                      <i className=\"fa fa-fw fa-edit\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"edit\"></i>\n                                    </a>\n\n                                  </td>\n                                  <td>\n\n                                  </td>\n                                </tr>\n                              )\n                            })}\n\n                            </tbody>\n                          </table>\n                        </div>\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              </div>\n            </div>\n          </div>\n        }\n\n        {showModal ? <EditProductType toggleModal={displayModal} productType={productTypeToEdit}/> : \"\"}\n        {addCatModal ? <AddProductTypeModal toggleModal={displayModal}/> : \"\"}\n        {showCsvModal ? <ProductTypeCsvUpload toggleModal={displayModal}/> : \"\"}\n      </>\n\n\n  )\n}\n\nexport {ProductTypeList}","import React, {useEffect, useState} from 'react'\nimport {updateCategory} from '../../utils/auth-client'\nimport toastr from \"toastr\";\nimport validator from \"validator\";\n/**\n * @return {string}\n */\nfunction InviteUser(props) {\n\n  const $ = window.$;\n  const [loading, setLoading] = useState(false);\n  const [formValues, setFormValues] = useState({\n    email: '',\n    errors: {}\n  });\n\n  useEffect(()=> {\n    window.$('#addGroup').modal('show');\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email } = formValues;\n    setLoading(true);\n    let errors = formValues.errors;\n    for (let val in formValues) {\n      if (val === \"email\") {\n        if (email.length <= 3) {\n          errors.name = \"email must be more than 3 characters long!\";\n          setLoading(false);\n          return\n        }\n        if (!validator.isEmail(email)) {\n          errors.email = \"Email is not valid!\";\n          setLoading(false);\n          return\n        }\n      }\n    }\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setLoading(false)\n      }\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n    delete formValues.errors\n    let data = await updateCategory(formValues);\n    if (data.status === 'success') {\n      toastr.success(\"product uploaded\")\n      $(\"#addGroup\").modal('toggle');\n      props.toggleModal(false);\n    }\n  };\n\n\n  const {errors} = formValues;\n\n  console.log(\"Errors ___\", errors.email)\n\n  return (\n    props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >Invite User</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n\n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">Email</label>\n                    <input type=\"email\" onChange={handleChange} name=\"email\" className=\"form-control\" id=\"colFormLabel\"/>\n                    {errors.email && errors.email.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.email}</span>\n                    )}\n                  </div>\n\n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n\n              {!loading ?\n                <button\n                  type=\"button\"\n                  onClick={handleSubmit}\n                  className=\"btn btn-primary btn-large waves-effect waves-light\"\n                  style={{ margin: \"auto\", display: \"block\", width: \"200px\" }}\n                >\n                  Invite User\n                </button> :\n                <button type=\"button\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light\"\n                        style={{margin: \"auto\", display: \"block\", width: \"200px\", opacity: \"0.4\"}}>\n                  Invite  User .....\n                </button>\n              }\n\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {InviteUser}\n\n","import React, {useEffect, useState} from \"react\";\nimport {getAllUsers, removeProduct} from \"../../utils/auth-client\";\nimport Swal from \"sweetalert2\";\nimport {Redirect} from \"react-router\";\nimport {ProductCsvUpload} from \"../../components/modals/product_csv_upload\";\nimport {InviteUser} from \"./user_invite_modal\";\nfunction UserList() {\n\n  const [users, setUsers] = useState([]);\n\n  const [productToEdit, setProductToEdit] = useState(false)\n\n  const [productId, setProductId] = useState(\"\")\n\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    (async function(){\n      const {data} = await getAllUsers()\n      setUsers(data)\n      const table = document.getElementById('datatable-buttons');\n      if (table) {\n        window.$('#datatable-buttons').DataTable({\n          \"lengthMenu\": [[20, 50, 100, -1], [20, 50, 100, \"All\"]],\n        });\n        window.$('input[type=search]').addClass('form-control');\n      }\n    })()\n  }, [showModal])\n\n  const editProduct = (id) => {\n    setProductToEdit(true)\n    setProductId(id)\n  }\n\n  const deleteProduct = async (product) => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: `You will not be able to recover this product ${product.name}!`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then( async (result) => {\n      if (result.value) {\n        const result = await removeProduct(product)\n        console.log(result)\n      }\n    })\n  }\n\n  const displayModal = (value) => {\n    setShowModal(value)\n  };\n\n\n  return (\n    !productToEdit ?\n      <>\n        <div className=\"main-content\">\n          <div className=\"page-content\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"page-title-box d-flex align-items-center justify-content-between\">\n                    <h4 className=\"mb-0 font-size-18\">Users</h4>\n                    <div className=\"page-title-right\">\n                      <div className=\"btn-group\" role=\"group\" style={{marginRight: \"80px\"}}>\n                        <button id=\"btnGroupDrop1\" type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                          Action <i className=\"mdi mdi-chevron-down\"></i>\n                        </button>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\" x-placement=\"bottom-start\"\n                             style={{position: \"absolute\", willChange: \"transform\", top: \"0px\", left: \"-70px\", transform: \"translate3d(0px, 36px, 0px)\"}}>\n\n                          <a href=\"#\" onClick={e => { setShowModal(true) }} className=\"dropdown-item\">\n                            Invite a User\n                          </a>\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <div className=\"table-responsive\">\n                        <table className=\"table mb-0\">\n                          <thead className=\"thead-light\">\n                          <tr role=\"row\">\n                            <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                aria-label=\"Name: activate to sort column descending\">#\n                            </th>\n                            <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                aria-label=\"Name: activate to sort column descending\">Name\n                            </th>\n                            <th className=\"sorting\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '397px'}}\n                                aria-label=\"Position: activate to sort column ascending\">Type\n                            </th>\n                            <th className=\"sorting\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '397px'}}\n                                aria-label=\"Position: activate to sort column ascending\">Email\n                            </th>\n                            <th className=\"sorting\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '202px'}}\n                                aria-label=\"Office: activate to sort column ascending\">Role\n                            </th>\n                            <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                            </th>\n                            <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                            </th>\n\n                          </tr>\n                          </thead>\n                          <tbody>\n                          {users.map((user, index)=> {\n                            return (\n                              <tr key={index}>\n                                <th scope=\"row\">{index+1}</th>\n                                <td>{user.fullName}</td>\n                                <td>{user.userType}</td>\n                                <td>{user.email}</td>\n                                <td>{user.roles ? user.roles[0] : \"---\"}</td>\n                                <td>\n                                  <a onClick={() => editProduct(user._id)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                    <i className=\"fa fa-fw fa-edit\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"edit\"></i>\n                                  </a>\n                                </td>\n                                <td>\n                                  <a onClick={()=> deleteProduct(user)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                    <i className=\"fa fa-fw fa-trash\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"remove\"></i>\n                                  </a>\n                                </td>\n                              </tr>\n                            )\n                          })}\n\n                          </tbody>\n                        </table>\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n        {showModal ? <InviteUser toggleModal={displayModal}/> : \"\"}\n      </>\n      :\n      <Redirect to={\"/product/edit/\"+productId} state={\"productId\"}/>\n\n  )\n}\n\nexport {UserList}","import React, {useEffect, useState} from 'react'\nimport {updateCategory} from '../../utils/auth-client'\nimport toastr from \"toastr\";\nimport validator from \"validator\";\n/**\n * @return {string}\n */\nfunction InviteUser(props) {\n\n  const $ = window.$;\n  const [loading, setLoading] = useState(false);\n  const [formValues, setFormValues] = useState({\n    email: '',\n    errors: {}\n  });\n\n  useEffect(()=> {\n    window.$('#addGroup').modal('show');\n    $('.dropify').dropify({\n      messages: {\n        'default': 'Drag and drop a file here or click',\n        'replace': 'Drag and drop or click to replace',\n        'remove':  'Remove',\n        'error':   'Ooops, something wrong happended.'\n      }\n    });\n  }, []);\n\n  const closeModal =() => {\n    props.toggleModal(false)\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { name, value, files } = event.target;\n    let errors = formValues.errors;\n    errors[name] = \"\";\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors,\n        [name]: value && !files ? value : files ? files : ''\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email } = formValues;\n    setLoading(true);\n    let errors = formValues.errors;\n    for (let val in formValues) {\n      if (val === \"email\") {\n        if (email.length <= 3) {\n          errors.name = \"email must be more than 3 characters long!\";\n          setLoading(false);\n          return\n        }\n        if (!validator.isEmail(email)) {\n          errors.email = \"Email is not valid!\";\n          setLoading(false);\n          return\n        }\n      }\n    }\n    for (let val of Object.values(formValues.errors)) {\n      if (val) {\n        setLoading(false)\n      }\n    }\n    setFormValues(prevState => {\n      return {\n        ...prevState,\n        errors\n      };\n    });\n    delete formValues.errors\n    let data = await updateCategory(formValues);\n    if (data.status === 'success') {\n      toastr.success(\"product uploaded\")\n      $(\"#addGroup\").modal('toggle');\n      props.toggleModal(false);\n    }\n  };\n\n\n  const {errors} = formValues;\n\n  console.log(\"Errors ___\", errors.email)\n\n  return (\n    props.toggleModal ?\n      <div id=\"addGroup\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\n           aria-labelledby=\"addGroupLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"addGroupLabel\" >Invite User</h5>\n              <button type=\"button\" onClick={()=> closeModal() } className=\"close waves-effect waves-light\" data-dismiss=\"modal\"\n                      aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form className=\"needs-validation\" noValidate>\n                <div className=\"form-row\">\n\n                  <div className=\"col-md-12 mb-4\">\n                    <label htmlFor=\"validationCustom01\">Email</label>\n                    <input type=\"email\" onChange={handleChange} name=\"email\" className=\"form-control\" id=\"colFormLabel\"/>\n                    {errors.email && errors.email.length > 0 && (\n                      <span className=\"addGroup__error\">{errors.email}</span>\n                    )}\n                  </div>\n\n                </div>\n\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n\n              {!loading ?\n                <button\n                  type=\"button\"\n                  onClick={handleSubmit}\n                  className=\"btn btn-primary btn-large waves-effect waves-light\"\n                  style={{ margin: \"auto\", display: \"block\", width: \"200px\" }}\n                >\n                  Invite User\n                </button> :\n                <button type=\"button\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light\"\n                        style={{margin: \"auto\", display: \"block\", width: \"200px\", opacity: \"0.4\"}}>\n                  Invite  User .....\n                </button>\n              }\n\n            </div>\n          </div>\n        </div>\n      </div> : \"\"\n  )\n}\n\nexport {InviteUser}\n\n","import React, {useEffect, useState} from \"react\";\nimport {getRegistrations, removeProduct} from \"../../utils/auth-client\";\nimport Swal from \"sweetalert2\";\nimport {Redirect} from \"react-router\";\nimport {ProductCsvUpload} from \"../../components/modals/product_csv_upload\";\nimport {InviteUser} from \"./user_invite_modal\";\n\nfunction RegistrationList() {\n\n  const [users, setUsers] = useState([]);\n\n  const [productToEdit, setProductToEdit] = useState(false)\n\n  const [productId, setProductId] = useState(\"\")\n\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    (async function(){\n      const data = await getRegistrations()\n      setUsers(data)\n      const table = document.getElementById('datatable-buttons');\n      if (table) {\n        window.$('#datatable-buttons').DataTable({\n          \"lengthMenu\": [[20, 50, 100, -1], [20, 50, 100, \"All\"]],\n        });\n        window.$('input[type=search]').addClass('form-control');\n      }\n    })()\n  }, [showModal])\n\n  const editProduct = (id) => {\n    setProductToEdit(true)\n    setProductId(id)\n  }\n\n  const deleteProduct = async (product) => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: `You will not be able to recover this product ${product.name}!`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then( async (result) => {\n      if (result.value) {\n        const result = await removeProduct(product)\n        console.log(result)\n      }\n    })\n  }\n\n  const displayModal = (value) => {\n    setShowModal(value)\n  };\n\n\n  return (\n    !productToEdit ?\n      <>\n        <div className=\"main-content\">\n          <div className=\"page-content\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"page-title-box d-flex align-items-center justify-content-between\">\n                    <h4 className=\"mb-0 font-size-18\">Registrations</h4>\n                 {/*   <div className=\"page-title-right\">\n                      <div className=\"btn-group\" role=\"group\" style={{marginRight: \"80px\"}}>\n                        <button id=\"btnGroupDrop1\" type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                          Action <i className=\"mdi mdi-chevron-down\"></i>\n                        </button>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\" x-placement=\"bottom-start\"\n                             style={{position: \"absolute\", willChange: \"transform\", top: \"0px\", left: \"-70px\", transform: \"translate3d(0px, 36px, 0px)\"}}>\n\n                          <a href=\"#\" onClick={e => { setShowModal(true) }} className=\"dropdown-item\">\n                            Invite a User\n                          </a>\n\n                        </div>\n                      </div>\n                    </div>*/}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <div className=\"table-responsive\">\n                        <table className=\"table mb-0\">\n                          <thead className=\"thead-light\">\n                          <tr role=\"row\">\n                            <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                aria-label=\"Name: activate to sort column descending\">#\n                            </th>\n                            <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                aria-label=\"Name: activate to sort column descending\">Name\n                            </th>\n                            <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '274px'}} aria-sort=\"ascending\"\n                                aria-label=\"Name: activate to sort column descending\">Phone Number\n                            </th>\n                            <th className=\"sorting\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '397px'}}\n                                aria-label=\"Position: activate to sort column ascending\">State\n                            </th>\n                            <th className=\"sorting\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '397px'}}\n                                aria-label=\"Position: activate to sort column ascending\">Email\n                            </th>\n                            <th className=\"sorting\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1}\n                                colSpan={1} style={{width: '202px'}}\n                                aria-label=\"Office: activate to sort column ascending\">Age\n                            </th>\n                            <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                            </th>\n                            <th className=\"sorting_asc\" tabIndex={0} aria-controls=\"datatable-buttons\" rowSpan={1} colSpan={1} style={{width: '10px'}}>\n                            </th>\n\n                          </tr>\n                          </thead>\n                          <tbody>\n                          {users.map((user, index)=> {\n                            return (\n                              <tr key={index}>\n                                <th scope=\"row\">{index+1}</th>\n                                <td>{user.name}</td>\n                                <td>{user.phone_number}</td>\n                                <td>{user.state}</td>\n                                <td>{user.email}</td>\n                                <td>{user.age}</td>\n                                <td>\n                                  {/*<a onClick={() => editProduct(user._id)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                    <i className=\"fa fa-fw fa-edit\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"edit\"></i>\n                                  </a>*/}\n                                </td>\n                                <td>\n                                  {/*<a onClick={()=> deleteProduct(user)} style={{color: \"#767c82\", cursor: \"pointer\"}}>\n                                    <i className=\"fa fa-fw fa-trash\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"data-original-title=\"remove\"></i>\n                                  </a>*/}\n                                </td>\n                              </tr>\n                            )\n                          })}\n\n                          </tbody>\n                        </table>\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n        {showModal ? <InviteUser toggleModal={displayModal}/> : \"\"}\n      </>\n      :\n      <Redirect to={\"/product/edit/\"+productId} state={\"productId\"}/>\n\n  )\n}\n\nexport {RegistrationList}","/** @jsx jsx */\n/** @jsxFrag React.Fragment */\n//import React, {useEffect} from 'react'\nimport {jsx} from '@emotion/core'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport {ErrorBoundary} from 'react-error-boundary'\nimport {ErrorMessage,} from './components/lib'\nimport {Home} from './pages/home'\nimport {AddProduct} from './pages/products/add_products'\nimport {AddGroupModal} from './components/modals/add_category'\nimport {NotFoud} from './components/404'\nimport {Header} from \"./components/header\";\nimport {SideBar} from \"./components/sidebar\";\nimport React from \"react\";\nimport {ChurchMemberList} from \"./pages/church_members/church_member_list\";\nimport {ProductList} from \"./pages/products/products_list\";\nimport {ProductEdit} from \"./pages/products/product_edit\";\nimport {CategoryList} from \"./pages/categories/list_categories\";\nimport {ProductTypeList} from \"./pages/product_type/list_product_type\";\nimport {UserList} from \"./pages/users/user_list\";\nimport {RegistrationList} from \"./pages/registrations/registration_list\";\n\nfunction ErrorFallback({error}) {\n  return (\n    <ErrorMessage\n      error={error}\n      css={{\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    />\n  )\n}\n\nfunction AuthenticatedApp() {\n  return (\n   <div id=\"layout-wrapper\">\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        <Router>\n          <Route render={props => <Header {...props} />} />\n          <Route render={props => <SideBar {...props} />} />\n          <Switch>\n            <Route path=\"/\" exact render={props => <RegistrationList {...props} />} />\n            <Route path=\"/add-product\" exact render={props => <AddProduct {...props} />} />\n            <Route path=\"/products/list\" exact render={props => <ProductList {...props} />} />\n            <Route path=\"/product/edit/:productId\" exact render={props => <ProductEdit {...props} />} />\n            <Route path=\"/add-group\" exact render={props => <AddGroupModal {...props} />} />\n            <Route path=\"/categories\" exact render={props => <CategoryList {...props} />} />\n            <Route path=\"/product-types\" exact render={props => <ProductTypeList {...props} />} />\n            <Route path=\"/users\" exact render={props => <UserList {...props} />} />\n            <Route path=\"/registrations\" exact render={props => <RegistrationList {...props} />} />\n            <Route path=\"*\" exact render={props => <NotFoud {...props} />} />\n          </Switch>\n        </Router>\n        \n      </ErrorBoundary>\n     <footer className=\"footer\">\n       <div className=\"container-fluid\">\n         <div className=\"row\">\n           <div className=\"col-sm-6\">\n           \n           </div>\n           <div className=\"col-sm-6\">\n             <div className=\"text-sm-right d-none d-sm-block\">\n               {new Date().getFullYear()} © kadismile.\n             </div>\n           </div>\n         </div>\n       </div>\n     </footer>\n    </div>\n  )\n}\n\n\nexport default AuthenticatedApp\n"],"sourceRoot":""}